{"ast":null,"code":"// ==================================================================\n// API CLIENT - CLIENTE HTTP CENTRALIZADO\n// ==================================================================\n\nimport { ApiError } from '../types/core';\nclass ApiClient {\n  constructor() {\n    this.baseURL = void 0;\n    this.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  }\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    console.log('üåê API Request:', {\n      url,\n      method: options.method || 'GET'\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      console.log('üì° API Response:', {\n        status: response.status,\n        statusText: response.statusText\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('‚ùå API Error:', errorData);\n        throw new ApiError(errorData.message || `HTTP error! status: ${response.status}`, response.status.toString(), errorData);\n      }\n      const data = await response.json();\n      console.log('‚úÖ API Success:', data);\n      return data;\n    } catch (error) {\n      console.error('üî• API Request failed:', error);\n      if (error instanceof ApiError) {\n        throw error;\n      }\n\n      // Error de red o JSON\n      throw new ApiError('Error de conexi√≥n con el servidor', 'NETWORK_ERROR', error);\n    }\n  }\n  async get(endpoint) {\n    return this.request(endpoint, {\n      method: 'GET'\n    });\n  }\n  async post(endpoint, data) {\n    return this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n  }\n  async put(endpoint, data) {\n    return this.request(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  }\n  async delete(endpoint) {\n    return this.request(endpoint, {\n      method: 'DELETE'\n    });\n  }\n}\nexport const apiClient = new ApiClient();","map":{"version":3,"names":["ApiError","ApiClient","constructor","baseURL","process","env","REACT_APP_API_URL","request","endpoint","options","url","console","log","method","config","headers","response","fetch","status","statusText","ok","errorData","json","catch","error","message","toString","data","get","post","body","JSON","stringify","put","delete","apiClient"],"sources":["/Users/user/TuAppDeAccesorios/frontend/src/services/apiClient.ts"],"sourcesContent":["// ==================================================================\n// API CLIENT - CLIENTE HTTP CENTRALIZADO\n// ==================================================================\n\nimport { ApiError } from '../types/core';\n\nclass ApiClient {\n  private baseURL: string;\n\n  constructor() {\n    this.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<T> {\n    const url = `${this.baseURL}${endpoint}`;\n    \n    console.log('üåê API Request:', { url, method: options.method || 'GET' });\n    \n    const config: RequestInit = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      \n      console.log('üì° API Response:', { status: response.status, statusText: response.statusText });\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('‚ùå API Error:', errorData);\n        throw new ApiError(\n          errorData.message || `HTTP error! status: ${response.status}`,\n          response.status.toString(),\n          errorData\n        );\n      }\n\n      const data = await response.json();\n      console.log('‚úÖ API Success:', data);\n      return data;\n    } catch (error) {\n      console.error('üî• API Request failed:', error);\n      if (error instanceof ApiError) {\n        throw error;\n      }\n      \n      // Error de red o JSON\n      throw new ApiError(\n        'Error de conexi√≥n con el servidor',\n        'NETWORK_ERROR',\n        error\n      );\n    }\n  }\n\n  async get<T>(endpoint: string): Promise<T> {\n    return this.request<T>(endpoint, { method: 'GET' });\n  }\n\n  async post<T>(endpoint: string, data: unknown): Promise<T> {\n    return this.request<T>(endpoint, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async put<T>(endpoint: string, data: unknown): Promise<T> {\n    return this.request<T>(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async delete<T>(endpoint: string): Promise<T> {\n    return this.request<T>(endpoint, { method: 'DELETE' });\n  }\n}\n\nexport const apiClient = new ApiClient();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}