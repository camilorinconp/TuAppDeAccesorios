{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[userRole,setUserRole]=useState(null);const[isInitialized,setIsInitialized]=useState(false);// Verificar estado de autenticación al cargar\nuseEffect(()=>{// Solo verificar si hay cookies que sugieren autenticación previa\nif(document.cookie.includes('access_token')){checkAuthStatus();}else{setIsInitialized(true);}},[]);const checkAuthStatus=async()=>{try{const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const response=await fetch(\"\".concat(API_URL,\"/verify\"),{method:'GET',credentials:'include',// Incluir cookies httpOnly\nheaders:{'Content-Type':'application/json'}});if(response.ok){const userData=await response.json();console.log('Auth verification response:',userData);setIsAuthenticated(true);setUserRole(userData.role);setIsInitialized(true);return true;}else{console.log('Auth verification failed:',response.status);setIsAuthenticated(false);setUserRole(null);setIsInitialized(true);return false;}}catch(error){console.error('Error checking auth status:',error);setIsAuthenticated(false);setUserRole(null);setIsInitialized(true);return false;}};const login=async()=>{return await checkAuthStatus();};const logout=async()=>{try{const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';await fetch(\"\".concat(API_URL,\"/logout\"),{method:'POST',credentials:'include',headers:{'Content-Type':'application/json'}});}catch(error){console.error('Error during logout:',error);}finally{setIsAuthenticated(false);setUserRole(null);}};// No renderizar hasta que se inicialice el estado de auth\nif(!isInitialized){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,userRole,login,logout,checkAuthStatus},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};// Hook para refrescar automáticamente el token\nexport const useTokenRefresh=()=>{const{logout,checkAuthStatus}=useAuth();useEffect(()=>{const interval=setInterval(async()=>{try{const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const response=await fetch(\"\".concat(API_URL,\"/refresh\"),{method:'POST',credentials:'include',headers:{'Content-Type':'application/json'}});if(!response.ok){// Si falla el refresh, verificar estado y cerrar sesión si es necesario\nconst isAuthenticated=await checkAuthStatus();if(!isAuthenticated){logout();}}}catch(error){console.error('Error refreshing token:',error);// Verificar estado de autenticación\nconst isAuthenticated=await checkAuthStatus();if(!isAuthenticated){logout();}}},14*60*1000);// Refrescar cada 14 minutos (antes de que expire a los 15)\nreturn()=>clearInterval(interval);},[logout,checkAuthStatus]);};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","userRole","setUserRole","isInitialized","setIsInitialized","document","cookie","includes","checkAuthStatus","API_URL","process","env","REACT_APP_API_URL","response","fetch","concat","method","credentials","headers","ok","userData","json","console","log","role","status","error","login","logout","Provider","value","useAuth","context","Error","useTokenRefresh","interval","setInterval","clearInterval"],"sources":["/Users/user/TuAppDeAccesorios/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode, useEffect } from 'react';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  userRole: string | null;\n  login: () => Promise<boolean>;\n  logout: () => void;\n  checkAuthStatus: () => Promise<boolean>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [userRole, setUserRole] = useState<string | null>(null);\n  const [isInitialized, setIsInitialized] = useState<boolean>(false);\n\n  // Verificar estado de autenticación al cargar\n  useEffect(() => {\n    // Solo verificar si hay cookies que sugieren autenticación previa\n    if (document.cookie.includes('access_token')) {\n      checkAuthStatus();\n    } else {\n      setIsInitialized(true);\n    }\n  }, []);\n\n  const checkAuthStatus = async (): Promise<boolean> => {\n    try {\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n      const response = await fetch(`${API_URL}/verify`, {\n        method: 'GET',\n        credentials: 'include', // Incluir cookies httpOnly\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        const userData = await response.json();\n        console.log('Auth verification response:', userData);\n        setIsAuthenticated(true);\n        setUserRole(userData.role);\n        setIsInitialized(true);\n        return true;\n      } else {\n        console.log('Auth verification failed:', response.status);\n        setIsAuthenticated(false);\n        setUserRole(null);\n        setIsInitialized(true);\n        return false;\n      }\n    } catch (error) {\n      console.error('Error checking auth status:', error);\n      setIsAuthenticated(false);\n      setUserRole(null);\n      setIsInitialized(true);\n      return false;\n    }\n  };\n\n  const login = async (): Promise<boolean> => {\n    return await checkAuthStatus();\n  };\n\n  const logout = async () => {\n    try {\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n      await fetch(`${API_URL}/logout`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n    } catch (error) {\n      console.error('Error during logout:', error);\n    } finally {\n      setIsAuthenticated(false);\n      setUserRole(null);\n    }\n  };\n\n  // No renderizar hasta que se inicialice el estado de auth\n  if (!isInitialized) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, userRole, login, logout, checkAuthStatus }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Hook para refrescar automáticamente el token\nexport const useTokenRefresh = () => {\n  const { logout, checkAuthStatus } = useAuth();\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n        const response = await fetch(`${API_URL}/refresh`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          // Si falla el refresh, verificar estado y cerrar sesión si es necesario\n          const isAuthenticated = await checkAuthStatus();\n          if (!isAuthenticated) {\n            logout();\n          }\n        }\n      } catch (error) {\n        console.error('Error refreshing token:', error);\n        // Verificar estado de autenticación\n        const isAuthenticated = await checkAuthStatus();\n        if (!isAuthenticated) {\n          logout();\n        }\n      }\n    }, 14 * 60 * 1000); // Refrescar cada 14 minutos (antes de que expire a los 15)\n\n    return () => clearInterval(interval);\n  }, [logout, checkAuthStatus]);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}