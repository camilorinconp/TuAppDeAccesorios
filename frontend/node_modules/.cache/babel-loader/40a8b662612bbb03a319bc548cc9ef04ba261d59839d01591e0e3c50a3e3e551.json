{"ast":null,"code":"import _objectSpread from\"/Users/user/TuAppDeAccesorios/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useCallback}from'react';import{checkSkuAvailability}from'../services/api';export const useSkuValidation=excludeProductId=>{const[validationState,setValidationState]=useState({isValidating:false,isAvailable:null,message:'',error:null});const validateSku=useCallback(async sku=>{// Limpiar estado si SKU está vacío\nif(!sku||sku.trim().length<3){setValidationState({isValidating:false,isAvailable:null,message:'',error:null});return;}setValidationState(prev=>_objectSpread(_objectSpread({},prev),{},{isValidating:true,error:null}));try{const result=await checkSkuAvailability(sku);setValidationState({isValidating:false,isAvailable:result.available,message:result.message,error:null});}catch(error){setValidationState({isValidating:false,isAvailable:null,message:'',error:'Error al verificar SKU'});}},[excludeProductId]);// Debounce para evitar demasiadas peticiones\nconst debouncedValidateSku=useCallback(debounce(validateSku,500),// 500ms de delay\n[validateSku]);return _objectSpread(_objectSpread({},validationState),{},{validateSku:debouncedValidateSku,clearValidation:()=>setValidationState({isValidating:false,isAvailable:null,message:'',error:null})});};// Función debounce\nfunction debounce(func,wait){let timeout;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}clearTimeout(timeout);timeout=setTimeout(()=>func(...args),wait);};}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}