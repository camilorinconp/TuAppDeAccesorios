{"ast":null,"code":"// ==================================================================\n// AUTH SLICE - REEMPLAZO DEL CONTEXT API\n// ==================================================================\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authApi } from '../../services/api';\nconst initialState = {\n  isAuthenticated: false,\n  userRole: null,\n  isInitialized: false,\n  isLoading: false,\n  error: null,\n  token: null,\n  refreshToken: null\n};\n\n// Async thunks\nexport const login = createAsyncThunk('auth/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authApi.login(credentials);\n\n    // Almacenar tokens en localStorage\n    localStorage.setItem('access_token', response.data.access_token);\n    localStorage.setItem('refresh_token', response.data.refresh_token);\n    localStorage.setItem('user_role', response.data.user_role);\n    return {\n      token: response.data.access_token,\n      refreshToken: response.data.refresh_token,\n      userRole: response.data.user_role\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Error en el login');\n  }\n});\nexport const refreshAuthToken = createAsyncThunk('auth/refreshToken', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (!refreshToken) {\n      throw new Error('No refresh token available');\n    }\n    const response = await authApi.refreshToken(refreshToken);\n\n    // Actualizar tokens\n    localStorage.setItem('access_token', response.data.access_token);\n    localStorage.setItem('refresh_token', response.data.refresh_token);\n    return {\n      token: response.data.access_token,\n      refreshToken: response.data.refresh_token\n    };\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    // Limpiar tokens inválidos\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('user_role');\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Error al refrescar token');\n  }\n});\nexport const checkAuthStatus = createAsyncThunk('auth/checkStatus', async (_, {\n  dispatch,\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const userRole = localStorage.getItem('user_role');\n    if (!token) {\n      throw new Error('No token found');\n    }\n\n    // Verificar si el token es válido\n    const response = await authApi.verifyToken(token);\n    return {\n      token,\n      userRole,\n      isValid: response.data.valid\n    };\n  } catch (error) {\n    // Si el token no es válido, intentar refrescar\n    const refreshResult = await dispatch(refreshAuthToken());\n    if (refreshAuthToken.fulfilled.match(refreshResult)) {\n      return {\n        token: refreshResult.payload.token,\n        userRole: localStorage.getItem('user_role'),\n        isValid: true\n      };\n    }\n    return rejectWithValue('Authentication verification failed');\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      await authApi.logout(token);\n    }\n  } catch (error) {\n    // Ignorar errores de logout en el servidor\n    console.warn('Logout server error:', error);\n  } finally {\n    // Siempre limpiar tokens locales\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('user_role');\n  }\n});\n\n// Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    resetAuth: state => {\n      Object.assign(state, initialState);\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.token;\n      state.refreshToken = action.payload.refreshToken;\n      state.userRole = action.payload.userRole;\n      state.error = null;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n      state.token = null;\n      state.refreshToken = null;\n      state.userRole = null;\n      state.error = action.payload;\n    })\n\n    // Refresh token\n    .addCase(refreshAuthToken.pending, state => {\n      state.isLoading = true;\n    }).addCase(refreshAuthToken.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.token = action.payload.token;\n      state.refreshToken = action.payload.refreshToken;\n      state.error = null;\n    }).addCase(refreshAuthToken.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n      state.token = null;\n      state.refreshToken = null;\n      state.userRole = null;\n      state.error = action.payload;\n    })\n\n    // Check auth status\n    .addCase(checkAuthStatus.pending, state => {\n      state.isLoading = true;\n      state.isInitialized = false;\n    }).addCase(checkAuthStatus.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isInitialized = true;\n      state.isAuthenticated = action.payload.isValid;\n      state.token = action.payload.token;\n      state.userRole = action.payload.userRole;\n      state.error = null;\n    }).addCase(checkAuthStatus.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isInitialized = true;\n      state.isAuthenticated = false;\n      state.token = null;\n      state.refreshToken = null;\n      state.userRole = null;\n      state.error = action.payload;\n    })\n\n    // Logout\n    .addCase(logout.pending, state => {\n      state.isLoading = true;\n    }).addCase(logout.fulfilled, state => {\n      Object.assign(state, initialState, {\n        isInitialized: true\n      });\n    }).addCase(logout.rejected, state => {\n      // Siempre limpiar el estado incluso si el logout falla\n      Object.assign(state, initialState, {\n        isInitialized: true\n      });\n    });\n  }\n});\nexport const {\n  clearError,\n  resetAuth\n} = authSlice.actions;\nexport default authSlice.reducer;\n\n// Selectores\nexport const selectAuth = state => state.auth;\nexport const selectIsAuthenticated = state => state.auth.isAuthenticated;\nexport const selectUserRole = state => state.auth.userRole;\nexport const selectIsInitialized = state => state.auth.isInitialized;\nexport const selectIsLoading = state => state.auth.isLoading;\nexport const selectAuthError = state => state.auth.error;\nexport const selectToken = state => state.auth.token;","map":{"version":3,"names":["createSlice","createAsyncThunk","authApi","initialState","isAuthenticated","userRole","isInitialized","isLoading","error","token","refreshToken","login","credentials","rejectWithValue","response","localStorage","setItem","data","access_token","refresh_token","user_role","_error$response","_error$response$data","detail","refreshAuthToken","_","getItem","Error","_error$response2","_error$response2$data","removeItem","checkAuthStatus","dispatch","verifyToken","isValid","valid","refreshResult","fulfilled","match","payload","logout","console","warn","authSlice","name","reducers","clearError","state","resetAuth","Object","assign","extraReducers","builder","addCase","pending","action","rejected","actions","reducer","selectAuth","auth","selectIsAuthenticated","selectUserRole","selectIsInitialized","selectIsLoading","selectAuthError","selectToken"],"sources":["/Users/user/TuAppDeAccesorios/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["// ==================================================================\n// AUTH SLICE - REEMPLAZO DEL CONTEXT API\n// ==================================================================\n\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { authApi } from '../../services/api';\n\nexport interface AuthState {\n  isAuthenticated: boolean;\n  userRole: string | null;\n  isInitialized: boolean;\n  isLoading: boolean;\n  error: string | null;\n  token: string | null;\n  refreshToken: string | null;\n}\n\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  userRole: null,\n  isInitialized: false,\n  isLoading: false,\n  error: null,\n  token: null,\n  refreshToken: null,\n};\n\n// Async thunks\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (credentials: { username: string; password: string }, { rejectWithValue }) => {\n    try {\n      const response = await authApi.login(credentials);\n      \n      // Almacenar tokens en localStorage\n      localStorage.setItem('access_token', response.data.access_token);\n      localStorage.setItem('refresh_token', response.data.refresh_token);\n      localStorage.setItem('user_role', response.data.user_role);\n      \n      return {\n        token: response.data.access_token,\n        refreshToken: response.data.refresh_token,\n        userRole: response.data.user_role,\n      };\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data?.detail || 'Error en el login');\n    }\n  }\n);\n\nexport const refreshAuthToken = createAsyncThunk(\n  'auth/refreshToken',\n  async (_, { rejectWithValue }) => {\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (!refreshToken) {\n        throw new Error('No refresh token available');\n      }\n      \n      const response = await authApi.refreshToken(refreshToken);\n      \n      // Actualizar tokens\n      localStorage.setItem('access_token', response.data.access_token);\n      localStorage.setItem('refresh_token', response.data.refresh_token);\n      \n      return {\n        token: response.data.access_token,\n        refreshToken: response.data.refresh_token,\n      };\n    } catch (error: any) {\n      // Limpiar tokens inválidos\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user_role');\n      \n      return rejectWithValue(error.response?.data?.detail || 'Error al refrescar token');\n    }\n  }\n);\n\nexport const checkAuthStatus = createAsyncThunk(\n  'auth/checkStatus',\n  async (_, { dispatch, rejectWithValue }) => {\n    try {\n      const token = localStorage.getItem('access_token');\n      const userRole = localStorage.getItem('user_role');\n      \n      if (!token) {\n        throw new Error('No token found');\n      }\n      \n      // Verificar si el token es válido\n      const response = await authApi.verifyToken(token);\n      \n      return {\n        token,\n        userRole,\n        isValid: response.data.valid,\n      };\n    } catch (error: any) {\n      // Si el token no es válido, intentar refrescar\n      const refreshResult = await dispatch(refreshAuthToken());\n      if (refreshAuthToken.fulfilled.match(refreshResult)) {\n        return {\n          token: refreshResult.payload.token,\n          userRole: localStorage.getItem('user_role'),\n          isValid: true,\n        };\n      }\n      \n      return rejectWithValue('Authentication verification failed');\n    }\n  }\n);\n\nexport const logout = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        await authApi.logout(token);\n      }\n    } catch (error) {\n      // Ignorar errores de logout en el servidor\n      console.warn('Logout server error:', error);\n    } finally {\n      // Siempre limpiar tokens locales\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user_role');\n    }\n  }\n);\n\n// Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    resetAuth: (state) => {\n      Object.assign(state, initialState);\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Login\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.token = action.payload.token;\n        state.refreshToken = action.payload.refreshToken;\n        state.userRole = action.payload.userRole;\n        state.error = null;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = false;\n        state.token = null;\n        state.refreshToken = null;\n        state.userRole = null;\n        state.error = action.payload as string;\n      })\n      \n      // Refresh token\n      .addCase(refreshAuthToken.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(refreshAuthToken.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.token = action.payload.token;\n        state.refreshToken = action.payload.refreshToken;\n        state.error = null;\n      })\n      .addCase(refreshAuthToken.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = false;\n        state.token = null;\n        state.refreshToken = null;\n        state.userRole = null;\n        state.error = action.payload as string;\n      })\n      \n      // Check auth status\n      .addCase(checkAuthStatus.pending, (state) => {\n        state.isLoading = true;\n        state.isInitialized = false;\n      })\n      .addCase(checkAuthStatus.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isInitialized = true;\n        state.isAuthenticated = action.payload.isValid;\n        state.token = action.payload.token;\n        state.userRole = action.payload.userRole;\n        state.error = null;\n      })\n      .addCase(checkAuthStatus.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isInitialized = true;\n        state.isAuthenticated = false;\n        state.token = null;\n        state.refreshToken = null;\n        state.userRole = null;\n        state.error = action.payload as string;\n      })\n      \n      // Logout\n      .addCase(logout.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(logout.fulfilled, (state) => {\n        Object.assign(state, initialState, { isInitialized: true });\n      })\n      .addCase(logout.rejected, (state) => {\n        // Siempre limpiar el estado incluso si el logout falla\n        Object.assign(state, initialState, { isInitialized: true });\n      });\n  },\n});\n\nexport const { clearError, resetAuth } = authSlice.actions;\nexport default authSlice.reducer;\n\n// Selectores\nexport const selectAuth = (state: { auth: AuthState }) => state.auth;\nexport const selectIsAuthenticated = (state: { auth: AuthState }) => state.auth.isAuthenticated;\nexport const selectUserRole = (state: { auth: AuthState }) => state.auth.userRole;\nexport const selectIsInitialized = (state: { auth: AuthState }) => state.auth.isInitialized;\nexport const selectIsLoading = (state: { auth: AuthState }) => state.auth.isLoading;\nexport const selectAuthError = (state: { auth: AuthState }) => state.auth.error;\nexport const selectToken = (state: { auth: AuthState }) => state.auth.token;"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,SAASC,OAAO,QAAQ,oBAAoB;AAY5C,MAAMC,YAAuB,GAAG;EAC9BC,eAAe,EAAE,KAAK;EACtBC,QAAQ,EAAE,IAAI;EACdC,aAAa,EAAE,KAAK;EACpBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,YAAY,EAAE;AAChB,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAGV,gBAAgB,CACnC,YAAY,EACZ,OAAOW,WAAmD,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAClF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACS,KAAK,CAACC,WAAW,CAAC;;IAEjD;IACAG,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,QAAQ,CAACG,IAAI,CAACC,YAAY,CAAC;IAChEH,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEF,QAAQ,CAACG,IAAI,CAACE,aAAa,CAAC;IAClEJ,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,QAAQ,CAACG,IAAI,CAACG,SAAS,CAAC;IAE1D,OAAO;MACLX,KAAK,EAAEK,QAAQ,CAACG,IAAI,CAACC,YAAY;MACjCR,YAAY,EAAEI,QAAQ,CAACG,IAAI,CAACE,aAAa;MACzCd,QAAQ,EAAES,QAAQ,CAACG,IAAI,CAACG;IAC1B,CAAC;EACH,CAAC,CAAC,OAAOZ,KAAU,EAAE;IAAA,IAAAa,eAAA,EAAAC,oBAAA;IACnB,OAAOT,eAAe,CAAC,EAAAQ,eAAA,GAAAb,KAAK,CAACM,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBC,MAAM,KAAI,mBAAmB,CAAC;EAC7E;AACF,CACF,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGvB,gBAAgB,CAC9C,mBAAmB,EACnB,OAAOwB,CAAC,EAAE;EAAEZ;AAAgB,CAAC,KAAK;EAChC,IAAI;IACF,MAAMH,YAAY,GAAGK,YAAY,CAACW,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAI,CAAChB,YAAY,EAAE;MACjB,MAAM,IAAIiB,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IAEA,MAAMb,QAAQ,GAAG,MAAMZ,OAAO,CAACQ,YAAY,CAACA,YAAY,CAAC;;IAEzD;IACAK,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,QAAQ,CAACG,IAAI,CAACC,YAAY,CAAC;IAChEH,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEF,QAAQ,CAACG,IAAI,CAACE,aAAa,CAAC;IAElE,OAAO;MACLV,KAAK,EAAEK,QAAQ,CAACG,IAAI,CAACC,YAAY;MACjCR,YAAY,EAAEI,QAAQ,CAACG,IAAI,CAACE;IAC9B,CAAC;EACH,CAAC,CAAC,OAAOX,KAAU,EAAE;IAAA,IAAAoB,gBAAA,EAAAC,qBAAA;IACnB;IACAd,YAAY,CAACe,UAAU,CAAC,cAAc,CAAC;IACvCf,YAAY,CAACe,UAAU,CAAC,eAAe,CAAC;IACxCf,YAAY,CAACe,UAAU,CAAC,WAAW,CAAC;IAEpC,OAAOjB,eAAe,CAAC,EAAAe,gBAAA,GAAApB,KAAK,CAACM,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBX,IAAI,cAAAY,qBAAA,uBAApBA,qBAAA,CAAsBN,MAAM,KAAI,0BAA0B,CAAC;EACpF;AACF,CACF,CAAC;AAED,OAAO,MAAMQ,eAAe,GAAG9B,gBAAgB,CAC7C,kBAAkB,EAClB,OAAOwB,CAAC,EAAE;EAAEO,QAAQ;EAAEnB;AAAgB,CAAC,KAAK;EAC1C,IAAI;IACF,MAAMJ,KAAK,GAAGM,YAAY,CAACW,OAAO,CAAC,cAAc,CAAC;IAClD,MAAMrB,QAAQ,GAAGU,YAAY,CAACW,OAAO,CAAC,WAAW,CAAC;IAElD,IAAI,CAACjB,KAAK,EAAE;MACV,MAAM,IAAIkB,KAAK,CAAC,gBAAgB,CAAC;IACnC;;IAEA;IACA,MAAMb,QAAQ,GAAG,MAAMZ,OAAO,CAAC+B,WAAW,CAACxB,KAAK,CAAC;IAEjD,OAAO;MACLA,KAAK;MACLJ,QAAQ;MACR6B,OAAO,EAAEpB,QAAQ,CAACG,IAAI,CAACkB;IACzB,CAAC;EACH,CAAC,CAAC,OAAO3B,KAAU,EAAE;IACnB;IACA,MAAM4B,aAAa,GAAG,MAAMJ,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC;IACxD,IAAIA,gBAAgB,CAACa,SAAS,CAACC,KAAK,CAACF,aAAa,CAAC,EAAE;MACnD,OAAO;QACL3B,KAAK,EAAE2B,aAAa,CAACG,OAAO,CAAC9B,KAAK;QAClCJ,QAAQ,EAAEU,YAAY,CAACW,OAAO,CAAC,WAAW,CAAC;QAC3CQ,OAAO,EAAE;MACX,CAAC;IACH;IAEA,OAAOrB,eAAe,CAAC,oCAAoC,CAAC;EAC9D;AACF,CACF,CAAC;AAED,OAAO,MAAM2B,MAAM,GAAGvC,gBAAgB,CACpC,aAAa,EACb,OAAOwB,CAAC,EAAE;EAAEZ;AAAgB,CAAC,KAAK;EAChC,IAAI;IACF,MAAMJ,KAAK,GAAGM,YAAY,CAACW,OAAO,CAAC,cAAc,CAAC;IAClD,IAAIjB,KAAK,EAAE;MACT,MAAMP,OAAO,CAACsC,MAAM,CAAC/B,KAAK,CAAC;IAC7B;EACF,CAAC,CAAC,OAAOD,KAAK,EAAE;IACd;IACAiC,OAAO,CAACC,IAAI,CAAC,sBAAsB,EAAElC,KAAK,CAAC;EAC7C,CAAC,SAAS;IACR;IACAO,YAAY,CAACe,UAAU,CAAC,cAAc,CAAC;IACvCf,YAAY,CAACe,UAAU,CAAC,eAAe,CAAC;IACxCf,YAAY,CAACe,UAAU,CAAC,WAAW,CAAC;EACtC;AACF,CACF,CAAC;;AAED;AACA,MAAMa,SAAS,GAAG3C,WAAW,CAAC;EAC5B4C,IAAI,EAAE,MAAM;EACZzC,YAAY;EACZ0C,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACvC,KAAK,GAAG,IAAI;IACpB,CAAC;IACDwC,SAAS,EAAGD,KAAK,IAAK;MACpBE,MAAM,CAACC,MAAM,CAACH,KAAK,EAAE5C,YAAY,CAAC;IACpC;EACF,CAAC;EACDgD,aAAa,EAAGC,OAAO,IAAK;IAC1BA;IACE;IAAA,CACCC,OAAO,CAAC1C,KAAK,CAAC2C,OAAO,EAAGP,KAAK,IAAK;MACjCA,KAAK,CAACxC,SAAS,GAAG,IAAI;MACtBwC,KAAK,CAACvC,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACD6C,OAAO,CAAC1C,KAAK,CAAC0B,SAAS,EAAE,CAACU,KAAK,EAAEQ,MAAM,KAAK;MAC3CR,KAAK,CAACxC,SAAS,GAAG,KAAK;MACvBwC,KAAK,CAAC3C,eAAe,GAAG,IAAI;MAC5B2C,KAAK,CAACtC,KAAK,GAAG8C,MAAM,CAAChB,OAAO,CAAC9B,KAAK;MAClCsC,KAAK,CAACrC,YAAY,GAAG6C,MAAM,CAAChB,OAAO,CAAC7B,YAAY;MAChDqC,KAAK,CAAC1C,QAAQ,GAAGkD,MAAM,CAAChB,OAAO,CAAClC,QAAQ;MACxC0C,KAAK,CAACvC,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACD6C,OAAO,CAAC1C,KAAK,CAAC6C,QAAQ,EAAE,CAACT,KAAK,EAAEQ,MAAM,KAAK;MAC1CR,KAAK,CAACxC,SAAS,GAAG,KAAK;MACvBwC,KAAK,CAAC3C,eAAe,GAAG,KAAK;MAC7B2C,KAAK,CAACtC,KAAK,GAAG,IAAI;MAClBsC,KAAK,CAACrC,YAAY,GAAG,IAAI;MACzBqC,KAAK,CAAC1C,QAAQ,GAAG,IAAI;MACrB0C,KAAK,CAACvC,KAAK,GAAG+C,MAAM,CAAChB,OAAiB;IACxC,CAAC;;IAED;IAAA,CACCc,OAAO,CAAC7B,gBAAgB,CAAC8B,OAAO,EAAGP,KAAK,IAAK;MAC5CA,KAAK,CAACxC,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACD8C,OAAO,CAAC7B,gBAAgB,CAACa,SAAS,EAAE,CAACU,KAAK,EAAEQ,MAAM,KAAK;MACtDR,KAAK,CAACxC,SAAS,GAAG,KAAK;MACvBwC,KAAK,CAACtC,KAAK,GAAG8C,MAAM,CAAChB,OAAO,CAAC9B,KAAK;MAClCsC,KAAK,CAACrC,YAAY,GAAG6C,MAAM,CAAChB,OAAO,CAAC7B,YAAY;MAChDqC,KAAK,CAACvC,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACD6C,OAAO,CAAC7B,gBAAgB,CAACgC,QAAQ,EAAE,CAACT,KAAK,EAAEQ,MAAM,KAAK;MACrDR,KAAK,CAACxC,SAAS,GAAG,KAAK;MACvBwC,KAAK,CAAC3C,eAAe,GAAG,KAAK;MAC7B2C,KAAK,CAACtC,KAAK,GAAG,IAAI;MAClBsC,KAAK,CAACrC,YAAY,GAAG,IAAI;MACzBqC,KAAK,CAAC1C,QAAQ,GAAG,IAAI;MACrB0C,KAAK,CAACvC,KAAK,GAAG+C,MAAM,CAAChB,OAAiB;IACxC,CAAC;;IAED;IAAA,CACCc,OAAO,CAACtB,eAAe,CAACuB,OAAO,EAAGP,KAAK,IAAK;MAC3CA,KAAK,CAACxC,SAAS,GAAG,IAAI;MACtBwC,KAAK,CAACzC,aAAa,GAAG,KAAK;IAC7B,CAAC,CAAC,CACD+C,OAAO,CAACtB,eAAe,CAACM,SAAS,EAAE,CAACU,KAAK,EAAEQ,MAAM,KAAK;MACrDR,KAAK,CAACxC,SAAS,GAAG,KAAK;MACvBwC,KAAK,CAACzC,aAAa,GAAG,IAAI;MAC1ByC,KAAK,CAAC3C,eAAe,GAAGmD,MAAM,CAAChB,OAAO,CAACL,OAAO;MAC9Ca,KAAK,CAACtC,KAAK,GAAG8C,MAAM,CAAChB,OAAO,CAAC9B,KAAK;MAClCsC,KAAK,CAAC1C,QAAQ,GAAGkD,MAAM,CAAChB,OAAO,CAAClC,QAAQ;MACxC0C,KAAK,CAACvC,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACD6C,OAAO,CAACtB,eAAe,CAACyB,QAAQ,EAAE,CAACT,KAAK,EAAEQ,MAAM,KAAK;MACpDR,KAAK,CAACxC,SAAS,GAAG,KAAK;MACvBwC,KAAK,CAACzC,aAAa,GAAG,IAAI;MAC1ByC,KAAK,CAAC3C,eAAe,GAAG,KAAK;MAC7B2C,KAAK,CAACtC,KAAK,GAAG,IAAI;MAClBsC,KAAK,CAACrC,YAAY,GAAG,IAAI;MACzBqC,KAAK,CAAC1C,QAAQ,GAAG,IAAI;MACrB0C,KAAK,CAACvC,KAAK,GAAG+C,MAAM,CAAChB,OAAiB;IACxC,CAAC;;IAED;IAAA,CACCc,OAAO,CAACb,MAAM,CAACc,OAAO,EAAGP,KAAK,IAAK;MAClCA,KAAK,CAACxC,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACD8C,OAAO,CAACb,MAAM,CAACH,SAAS,EAAGU,KAAK,IAAK;MACpCE,MAAM,CAACC,MAAM,CAACH,KAAK,EAAE5C,YAAY,EAAE;QAAEG,aAAa,EAAE;MAAK,CAAC,CAAC;IAC7D,CAAC,CAAC,CACD+C,OAAO,CAACb,MAAM,CAACgB,QAAQ,EAAGT,KAAK,IAAK;MACnC;MACAE,MAAM,CAACC,MAAM,CAACH,KAAK,EAAE5C,YAAY,EAAE;QAAEG,aAAa,EAAE;MAAK,CAAC,CAAC;IAC7D,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEwC,UAAU;EAAEE;AAAU,CAAC,GAAGL,SAAS,CAACc,OAAO;AAC1D,eAAed,SAAS,CAACe,OAAO;;AAEhC;AACA,OAAO,MAAMC,UAAU,GAAIZ,KAA0B,IAAKA,KAAK,CAACa,IAAI;AACpE,OAAO,MAAMC,qBAAqB,GAAId,KAA0B,IAAKA,KAAK,CAACa,IAAI,CAACxD,eAAe;AAC/F,OAAO,MAAM0D,cAAc,GAAIf,KAA0B,IAAKA,KAAK,CAACa,IAAI,CAACvD,QAAQ;AACjF,OAAO,MAAM0D,mBAAmB,GAAIhB,KAA0B,IAAKA,KAAK,CAACa,IAAI,CAACtD,aAAa;AAC3F,OAAO,MAAM0D,eAAe,GAAIjB,KAA0B,IAAKA,KAAK,CAACa,IAAI,CAACrD,SAAS;AACnF,OAAO,MAAM0D,eAAe,GAAIlB,KAA0B,IAAKA,KAAK,CAACa,IAAI,CAACpD,KAAK;AAC/E,OAAO,MAAM0D,WAAW,GAAInB,KAA0B,IAAKA,KAAK,CAACa,IAAI,CAACnD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}