{"ast":null,"code":"// ==================================================================\n// SALE SLICE - GESTIÓN DE VENTAS\n// ==================================================================\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { saleService } from '../../services/saleService';\nconst initialState = {\n  isLoading: false,\n  isProcessing: false,\n  error: null,\n  lastSale: null,\n  successMessage: null\n};\n\n// Thunk asíncrono para procesar venta\nexport const processSale = createAsyncThunk('sale/processSale', async (saleData, {\n  rejectWithValue\n}) => {\n  try {\n    const result = await saleService.create(saleData);\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.message || 'Error al procesar la venta');\n  }\n});\nconst saleSlice = createSlice({\n  name: 'sale',\n  initialState,\n  reducers: {\n    clearSaleState: state => {\n      state.error = null;\n      state.successMessage = null;\n      state.lastSale = null;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    clearSuccessMessage: state => {\n      state.successMessage = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(processSale.pending, state => {\n      state.isProcessing = true;\n      state.isLoading = true;\n      state.error = null;\n      state.successMessage = null;\n    }).addCase(processSale.fulfilled, (state, action) => {\n      state.isProcessing = false;\n      state.isLoading = false;\n      state.lastSale = action.payload;\n      state.successMessage = '¡Venta registrada con éxito! Inventario actualizado automáticamente.';\n      state.error = null;\n    }).addCase(processSale.rejected, (state, action) => {\n      state.isProcessing = false;\n      state.isLoading = false;\n      state.error = action.payload;\n      state.successMessage = null;\n    });\n  }\n});\nexport const {\n  clearSaleState,\n  clearError,\n  clearSuccessMessage\n} = saleSlice.actions;\nexport default saleSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","saleService","initialState","isLoading","isProcessing","error","lastSale","successMessage","processSale","saleData","rejectWithValue","result","create","message","saleSlice","name","reducers","clearSaleState","state","clearError","clearSuccessMessage","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/user/TuAppDeAccesorios/frontend/src/store/slices/saleSlice.ts"],"sourcesContent":["// ==================================================================\n// SALE SLICE - GESTIÓN DE VENTAS\n// ==================================================================\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { SalePayload, SaleState } from '../../types/core';\nimport { saleService } from '../../services/saleService';\n\nconst initialState: SaleState = {\n  isLoading: false,\n  isProcessing: false,\n  error: null,\n  lastSale: null,\n  successMessage: null,\n};\n\n// Thunk asíncrono para procesar venta\nexport const processSale = createAsyncThunk(\n  'sale/processSale',\n  async (saleData: SalePayload, { rejectWithValue }) => {\n    try {\n      const result = await saleService.create(saleData);\n      return result;\n    } catch (error: any) {\n      return rejectWithValue(error.message || 'Error al procesar la venta');\n    }\n  }\n);\n\nconst saleSlice = createSlice({\n  name: 'sale',\n  initialState,\n  reducers: {\n    clearSaleState: (state) => {\n      state.error = null;\n      state.successMessage = null;\n      state.lastSale = null;\n    },\n    \n    clearError: (state) => {\n      state.error = null;\n    },\n    \n    clearSuccessMessage: (state) => {\n      state.successMessage = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(processSale.pending, (state) => {\n        state.isProcessing = true;\n        state.isLoading = true;\n        state.error = null;\n        state.successMessage = null;\n      })\n      .addCase(processSale.fulfilled, (state, action) => {\n        state.isProcessing = false;\n        state.isLoading = false;\n        state.lastSale = action.payload;\n        state.successMessage = '¡Venta registrada con éxito! Inventario actualizado automáticamente.';\n        state.error = null;\n      })\n      .addCase(processSale.rejected, (state, action) => {\n        state.isProcessing = false;\n        state.isLoading = false;\n        state.error = action.payload as string;\n        state.successMessage = null;\n      });\n  },\n});\n\nexport const { clearSaleState, clearError, clearSuccessMessage } = saleSlice.actions;\nexport default saleSlice.reducer;"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,SAASC,WAAW,QAAQ,4BAA4B;AAExD,MAAMC,YAAuB,GAAG;EAC9BC,SAAS,EAAE,KAAK;EAChBC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACdC,cAAc,EAAE;AAClB,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAGR,gBAAgB,CACzC,kBAAkB,EAClB,OAAOS,QAAqB,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACpD,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,MAAM,CAACH,QAAQ,CAAC;IACjD,OAAOE,MAAM;EACf,CAAC,CAAC,OAAON,KAAU,EAAE;IACnB,OAAOK,eAAe,CAACL,KAAK,CAACQ,OAAO,IAAI,4BAA4B,CAAC;EACvE;AACF,CACF,CAAC;AAED,MAAMC,SAAS,GAAGf,WAAW,CAAC;EAC5BgB,IAAI,EAAE,MAAM;EACZb,YAAY;EACZc,QAAQ,EAAE;IACRC,cAAc,EAAGC,KAAK,IAAK;MACzBA,KAAK,CAACb,KAAK,GAAG,IAAI;MAClBa,KAAK,CAACX,cAAc,GAAG,IAAI;MAC3BW,KAAK,CAACZ,QAAQ,GAAG,IAAI;IACvB,CAAC;IAEDa,UAAU,EAAGD,KAAK,IAAK;MACrBA,KAAK,CAACb,KAAK,GAAG,IAAI;IACpB,CAAC;IAEDe,mBAAmB,EAAGF,KAAK,IAAK;MAC9BA,KAAK,CAACX,cAAc,GAAG,IAAI;IAC7B;EACF,CAAC;EACDc,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACf,WAAW,CAACgB,OAAO,EAAGN,KAAK,IAAK;MACvCA,KAAK,CAACd,YAAY,GAAG,IAAI;MACzBc,KAAK,CAACf,SAAS,GAAG,IAAI;MACtBe,KAAK,CAACb,KAAK,GAAG,IAAI;MAClBa,KAAK,CAACX,cAAc,GAAG,IAAI;IAC7B,CAAC,CAAC,CACDgB,OAAO,CAACf,WAAW,CAACiB,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAM,KAAK;MACjDR,KAAK,CAACd,YAAY,GAAG,KAAK;MAC1Bc,KAAK,CAACf,SAAS,GAAG,KAAK;MACvBe,KAAK,CAACZ,QAAQ,GAAGoB,MAAM,CAACC,OAAO;MAC/BT,KAAK,CAACX,cAAc,GAAG,sEAAsE;MAC7FW,KAAK,CAACb,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDkB,OAAO,CAACf,WAAW,CAACoB,QAAQ,EAAE,CAACV,KAAK,EAAEQ,MAAM,KAAK;MAChDR,KAAK,CAACd,YAAY,GAAG,KAAK;MAC1Bc,KAAK,CAACf,SAAS,GAAG,KAAK;MACvBe,KAAK,CAACb,KAAK,GAAGqB,MAAM,CAACC,OAAiB;MACtCT,KAAK,CAACX,cAAc,GAAG,IAAI;IAC7B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU,cAAc;EAAEE,UAAU;EAAEC;AAAoB,CAAC,GAAGN,SAAS,CAACe,OAAO;AACpF,eAAef,SAAS,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}