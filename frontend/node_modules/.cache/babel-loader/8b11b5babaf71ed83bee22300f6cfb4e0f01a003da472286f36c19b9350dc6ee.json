{"ast":null,"code":"import _objectSpread from\"/Users/user/TuAppDeAccesorios/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// /frontend/src/services/api.ts\nconst API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';// Función para obtener headers de autenticación (ahora con cookies)\nconst getAuthHeaders=()=>{return{'Content-Type':'application/json'// Las cookies se envían automáticamente con credentials: 'include'\n};};const getDistributorAuthHeaders=()=>{return{'Content-Type':'application/json'// Las cookies se envían automáticamente con credentials: 'include'\n};};// Configuración por defecto para todas las peticiones\nconst defaultFetchOptions={credentials:'include'// Incluir cookies en todas las peticiones\n};// Función helper para hacer peticiones a la API con manejo de errores estandarizado\nexport const apiRequest=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=endpoint.startsWith('http')?endpoint:\"\".concat(API_URL).concat(endpoint);const config=_objectSpread(_objectSpread({},defaultFetchOptions),{},{headers:_objectSpread(_objectSpread({},getAuthHeaders()),options.headers)},options);try{const response=await fetch(url,config);// Manejar diferentes códigos de estado\nif(response.status===401){// Token expirado o inválido\ntry{await refreshToken();// Reintentar la petición original con el token refrescado\nconst retryResponse=await fetch(url,config);if(!retryResponse.ok){throw new Error(\"Request failed with status \".concat(retryResponse.status));}return retryResponse.json();}catch(refreshError){// Si falla el refresh, redirigir al login\nwindow.location.href='/login';throw new Error('Session expired. Please login again.');}}if(response.status===403){throw new Error('Access forbidden. You do not have permission to perform this action.');}if(response.status===404){throw new Error('Resource not found.');}if(response.status>=500){throw new Error('Server error. Please try again later.');}if(!response.ok){// Intentar obtener el mensaje de error del servidor\ntry{const errorData=await response.json();throw new Error(errorData.detail||errorData.message||\"Request failed with status \".concat(response.status));}catch(parseError){throw new Error(\"Request failed with status \".concat(response.status));}}// Si la respuesta está vacía, devolver null\nconst contentType=response.headers.get('content-type');if(!contentType||!contentType.includes('application/json')){return null;}return response.json();}catch(error){if(error instanceof Error){throw error;}throw new Error('Network error. Please check your connection and try again.');}};// --- Funciones de Autenticación ---\nexport const loginUser=async(username,password)=>{const details={username:username,password:password};const formBody=Object.keys(details).map(key=>encodeURIComponent(key)+'='+encodeURIComponent(details[key])).join('&');const response=await fetch(\"\".concat(API_URL,\"/token\"),{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:formBody,credentials:'include'// Incluir cookies para recibir el token\n});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||'Login failed');}return response.json();};export const loginDistributor=async(username,accessCode)=>{const details={username:username,password:accessCode// Usamos password para el access_code en el formulario\n};const formBody=Object.keys(details).map(key=>encodeURIComponent(key)+'='+encodeURIComponent(details[key])).join('&');const response=await fetch(\"\".concat(API_URL,\"/distributor-token\"),{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:formBody,credentials:'include'// Incluir cookies para recibir el token\n});if(!response.ok){const errorData=await response.json();throw new Error(errorData.detail||'Distributor login failed');}return response.json();};// Función para refrescar el token\nexport const refreshToken=async()=>{const response=await fetch(\"\".concat(API_URL,\"/refresh\"),{method:'POST',credentials:'include'});if(!response.ok){throw new Error('Failed to refresh token');}return response.json();};// Función para cerrar sesión\nexport const logoutUser=async()=>{await fetch(\"\".concat(API_URL,\"/logout\"),{method:'POST',credentials:'include'});};// --- Funciones de la API ---\n// Productos\n// Interfaz para la respuesta paginada de productos\nexport const getProducts=async function(){let skip=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;return apiRequest(\"/products/?skip=\".concat(skip,\"&limit=\").concat(limit));};// Mantener la función anterior para compatibilidad\nexport const getAllProducts=async()=>{const response=await getProducts(0,1000);// Obtener muchos productos\nreturn response.products;};export const createProduct=async product=>{return apiRequest('/products/',{method:'POST',body:JSON.stringify(product)});};export const updateProduct=async(productId,product)=>{return apiRequest(\"/products/\".concat(productId),{method:'PUT',body:JSON.stringify(product)});};// Ventas\nexport const postSale=async saleData=>{return apiRequest('/pos/sales',{method:'POST',body:JSON.stringify(saleData)});};// Consignación\nexport const getDistributorLoansByAccessCode=async accessCode=>{// Ahora usamos el endpoint específico para distribuidores autenticados\nconst loansResponse=await fetch(\"\".concat(API_URL,\"/my-loans\"),_objectSpread({headers:getDistributorAuthHeaders()},defaultFetchOptions));if(!loansResponse.ok)throw new Error('Failed to fetch loans');const loans=await loansResponse.json();// Obtener información de productos\nconst productsResponse=await fetch(\"\".concat(API_URL,\"/products/\"),_objectSpread({headers:getDistributorAuthHeaders()},defaultFetchOptions));if(!productsResponse.ok)throw new Error('Failed to fetch products');const productData=await productsResponse.json();const products=Array.isArray(productData)?productData:productData.products||[];const loansWithProducts=loans.map(loan=>_objectSpread(_objectSpread({},loan),{},{product:products.find(p=>p.id===loan.product_id)||null}));// Como el distribuidor ya está autenticado, creamos un objeto distribuidor placeholder\n// En un escenario real, podrías obtener la información del distribuidor desde el token JWT o un endpoint específico\nconst distributor={id:1,// Este valor será el correcto desde el token JWT\nname:\"Distribuidor Autenticado\",access_code:accessCode,contact_info:\"\"};return{loans:loansWithProducts,distributor};};export const postConsignmentReport=async reportData=>{return apiRequest('/consignments/reports',{method:'POST',headers:getDistributorAuthHeaders(),body:JSON.stringify(reportData)});};// Función para buscar productos\nexport const searchProducts=async query=>{return apiRequest(\"/products/search?q=\".concat(encodeURIComponent(query)));};// Función para eliminar producto\nexport const deleteProduct=async productId=>{return apiRequest(\"/products/\".concat(productId),{method:'DELETE'});};// Función para obtener un producto específico\nexport const getProduct=async productId=>{return apiRequest(\"/products/\".concat(productId));};// Función para obtener estadísticas\nexport const getStats=async()=>{return apiRequest('/stats');};// Función para obtener distribuidores\nexport const getDistributors=async()=>{return apiRequest('/distributors/');};// Función para crear distribuidor\nexport const createDistributor=async distributor=>{return apiRequest('/distributors/',{method:'POST',body:JSON.stringify(distributor)});};// Función para actualizar distribuidor\nexport const updateDistributor=async(distributorId,distributor)=>{return apiRequest(\"/distributors/\".concat(distributorId),{method:'PUT',body:JSON.stringify(distributor)});};// Función para obtener préstamos de un distribuidor\nexport const getDistributorLoans=async distributorId=>{return apiRequest(\"/distributors/\".concat(distributorId,\"/loans\"));};// Función para crear préstamo de consignación\nexport const createConsignmentLoan=async loan=>{return apiRequest('/consignments/loans',{method:'POST',body:JSON.stringify(loan)});};// Función para verificar estado de autenticación\nexport const verifyAuth=async()=>{return apiRequest('/verify');};// Función para obtener perfil de usuario\nexport const getUserProfile=async()=>{return apiRequest('/users/me');};// Función helper para manejo de errores de red\nexport const handleApiError=error=>{if(error.message.includes('Network error')){return'Error de conexión. Verifica tu conexión a internet e intenta nuevamente.';}if(error.message.includes('Session expired')){return'Tu sesión ha expirado. Por favor, inicia sesión nuevamente.';}if(error.message.includes('Access forbidden')){return'No tienes permisos para realizar esta acción.';}if(error.message.includes('Server error')){return'Error del servidor. Por favor, intenta más tarde.';}return error.message||'Ha ocurrido un error inesperado.';};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getAuthHeaders","getDistributorAuthHeaders","defaultFetchOptions","credentials","apiRequest","endpoint","options","arguments","length","undefined","url","startsWith","concat","config","_objectSpread","headers","response","fetch","status","refreshToken","retryResponse","ok","Error","json","refreshError","window","location","href","errorData","detail","message","parseError","contentType","get","includes","error","loginUser","username","password","details","formBody","Object","keys","map","key","encodeURIComponent","join","method","body","loginDistributor","accessCode","logoutUser","getProducts","skip","limit","getAllProducts","products","createProduct","product","JSON","stringify","updateProduct","productId","postSale","saleData","getDistributorLoansByAccessCode","loansResponse","loans","productsResponse","productData","Array","isArray","loansWithProducts","loan","find","p","id","product_id","distributor","name","access_code","contact_info","postConsignmentReport","reportData","searchProducts","query","deleteProduct","getProduct","getStats","getDistributors","createDistributor","updateDistributor","distributorId","getDistributorLoans","createConsignmentLoan","verifyAuth","getUserProfile","handleApiError"],"sources":["/Users/user/TuAppDeAccesorios/frontend/src/services/api.ts"],"sourcesContent":["// /frontend/src/services/api.ts\nimport { Product, SalePayload, ConsignmentReportPayload, Distributor, ConsignmentLoan } from '../types';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Función para obtener headers de autenticación (ahora con cookies)\nconst getAuthHeaders = () => {\n    return {\n        'Content-Type': 'application/json',\n        // Las cookies se envían automáticamente con credentials: 'include'\n    };\n};\n\nconst getDistributorAuthHeaders = () => {\n    return {\n        'Content-Type': 'application/json',\n        // Las cookies se envían automáticamente con credentials: 'include'\n    };\n};\n\n// Configuración por defecto para todas las peticiones\nconst defaultFetchOptions = {\n    credentials: 'include' as RequestCredentials, // Incluir cookies en todas las peticiones\n};\n\n// Función helper para hacer peticiones a la API con manejo de errores estandarizado\nexport const apiRequest = async <T = any>(\n    endpoint: string,\n    options: RequestInit = {}\n): Promise<T> => {\n    const url = endpoint.startsWith('http') ? endpoint : `${API_URL}${endpoint}`;\n    \n    const config: RequestInit = {\n        ...defaultFetchOptions,\n        headers: {\n            ...getAuthHeaders(),\n            ...options.headers,\n        },\n        ...options,\n    };\n\n    try {\n        const response = await fetch(url, config);\n        \n        // Manejar diferentes códigos de estado\n        if (response.status === 401) {\n            // Token expirado o inválido\n            try {\n                await refreshToken();\n                // Reintentar la petición original con el token refrescado\n                const retryResponse = await fetch(url, config);\n                if (!retryResponse.ok) {\n                    throw new Error(`Request failed with status ${retryResponse.status}`);\n                }\n                return retryResponse.json();\n            } catch (refreshError) {\n                // Si falla el refresh, redirigir al login\n                window.location.href = '/login';\n                throw new Error('Session expired. Please login again.');\n            }\n        }\n        \n        if (response.status === 403) {\n            throw new Error('Access forbidden. You do not have permission to perform this action.');\n        }\n        \n        if (response.status === 404) {\n            throw new Error('Resource not found.');\n        }\n        \n        if (response.status >= 500) {\n            throw new Error('Server error. Please try again later.');\n        }\n        \n        if (!response.ok) {\n            // Intentar obtener el mensaje de error del servidor\n            try {\n                const errorData = await response.json();\n                throw new Error(errorData.detail || errorData.message || `Request failed with status ${response.status}`);\n            } catch (parseError) {\n                throw new Error(`Request failed with status ${response.status}`);\n            }\n        }\n        \n        // Si la respuesta está vacía, devolver null\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n            return null as T;\n        }\n        \n        return response.json();\n        \n    } catch (error) {\n        if (error instanceof Error) {\n            throw error;\n        }\n        throw new Error('Network error. Please check your connection and try again.');\n    }\n};\n\n// --- Funciones de Autenticación ---\nexport const loginUser = async (username: string, password: string): Promise<{ access_token: string; token_type: string }> => {\n    const details = {\n        username: username,\n        password: password,\n    };\n    const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key as keyof typeof details])).join('&');\n\n    const response = await fetch(`${API_URL}/token`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formBody,\n        credentials: 'include', // Incluir cookies para recibir el token\n    });\n\n    if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Login failed');\n    }\n    return response.json();\n};\n\nexport const loginDistributor = async (username: string, accessCode: string): Promise<{ access_token: string; token_type: string }> => {\n    const details = {\n        username: username,\n        password: accessCode, // Usamos password para el access_code en el formulario\n    };\n    const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key as keyof typeof details])).join('&');\n\n    const response = await fetch(`${API_URL}/distributor-token`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: formBody,\n        credentials: 'include', // Incluir cookies para recibir el token\n    });\n\n    if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Distributor login failed');\n    }\n    return response.json();\n};\n\n// Función para refrescar el token\nexport const refreshToken = async (): Promise<{ access_token: string; token_type: string }> => {\n    const response = await fetch(`${API_URL}/refresh`, {\n        method: 'POST',\n        credentials: 'include',\n    });\n\n    if (!response.ok) {\n        throw new Error('Failed to refresh token');\n    }\n    return response.json();\n};\n\n// Función para cerrar sesión\nexport const logoutUser = async (): Promise<void> => {\n    await fetch(`${API_URL}/logout`, {\n        method: 'POST',\n        credentials: 'include',\n    });\n};\n\n// --- Funciones de la API ---\n\n// Productos\n// Interfaz para la respuesta paginada de productos\ninterface ProductListResponse {\n    products: Product[];\n    total: number;\n    skip: number;\n    limit: number;\n    has_next: boolean;\n}\n\nexport const getProducts = async (skip: number = 0, limit: number = 20): Promise<ProductListResponse> => {\n    return apiRequest<ProductListResponse>(`/products/?skip=${skip}&limit=${limit}`);\n};\n\n// Mantener la función anterior para compatibilidad\nexport const getAllProducts = async (): Promise<Product[]> => {\n    const response = await getProducts(0, 1000); // Obtener muchos productos\n    return response.products;\n};\n\nexport const createProduct = async (product: Product): Promise<Product> => {\n    return apiRequest<Product>('/products/', {\n        method: 'POST',\n        body: JSON.stringify(product),\n    });\n};\n\nexport const updateProduct = async (productId: number, product: Partial<Product>): Promise<Product> => {\n    return apiRequest<Product>(`/products/${productId}`, {\n        method: 'PUT',\n        body: JSON.stringify(product),\n    });\n};\n\n// Ventas\nexport const postSale = async (saleData: SalePayload): Promise<any> => {\n    return apiRequest('/pos/sales', {\n        method: 'POST',\n        body: JSON.stringify(saleData),\n    });\n};\n\n// Consignación\nexport const getDistributorLoansByAccessCode = async (accessCode: string): Promise<{ loans: ConsignmentLoan[], distributor: Distributor }> => {\n    // Ahora usamos el endpoint específico para distribuidores autenticados\n    const loansResponse = await fetch(`${API_URL}/my-loans`, {\n        headers: getDistributorAuthHeaders(),\n        ...defaultFetchOptions,\n    });\n    if (!loansResponse.ok) throw new Error('Failed to fetch loans');\n    const loans: ConsignmentLoan[] = await loansResponse.json();\n    \n    // Obtener información de productos\n    const productsResponse = await fetch(`${API_URL}/products/`, {\n        headers: getDistributorAuthHeaders(),\n        ...defaultFetchOptions,\n    });\n    if (!productsResponse.ok) throw new Error('Failed to fetch products');\n    const productData = await productsResponse.json();\n    const products: Product[] = Array.isArray(productData) ? productData : productData.products || [];\n    \n    const loansWithProducts = loans.map(loan => ({\n        ...loan,\n        product: products.find(p => p.id === loan.product_id) || null\n    }));\n\n    // Como el distribuidor ya está autenticado, creamos un objeto distribuidor placeholder\n    // En un escenario real, podrías obtener la información del distribuidor desde el token JWT o un endpoint específico\n    const distributor: Distributor = {\n        id: 1, // Este valor será el correcto desde el token JWT\n        name: \"Distribuidor Autenticado\",\n        access_code: accessCode,\n        contact_info: \"\"\n    };\n\n    return { loans: loansWithProducts, distributor };\n};\n\nexport const postConsignmentReport = async (reportData: ConsignmentReportPayload): Promise<any> => {\n    return apiRequest('/consignments/reports', {\n        method: 'POST',\n        headers: getDistributorAuthHeaders(),\n        body: JSON.stringify(reportData),\n    });\n};\n\n// Función para buscar productos\nexport const searchProducts = async (query: string): Promise<Product[]> => {\n    return apiRequest<Product[]>(`/products/search?q=${encodeURIComponent(query)}`);\n};\n\n// Función para eliminar producto\nexport const deleteProduct = async (productId: number): Promise<void> => {\n    return apiRequest<void>(`/products/${productId}`, {\n        method: 'DELETE',\n    });\n};\n\n// Función para obtener un producto específico\nexport const getProduct = async (productId: number): Promise<Product> => {\n    return apiRequest<Product>(`/products/${productId}`);\n};\n\n// Función para obtener estadísticas\nexport const getStats = async (): Promise<any> => {\n    return apiRequest('/stats');\n};\n\n// Función para obtener distribuidores\nexport const getDistributors = async (): Promise<Distributor[]> => {\n    return apiRequest<Distributor[]>('/distributors/');\n};\n\n// Función para crear distribuidor\nexport const createDistributor = async (distributor: Omit<Distributor, 'id'>): Promise<Distributor> => {\n    return apiRequest<Distributor>('/distributors/', {\n        method: 'POST',\n        body: JSON.stringify(distributor),\n    });\n};\n\n// Función para actualizar distribuidor\nexport const updateDistributor = async (distributorId: number, distributor: Partial<Distributor>): Promise<Distributor> => {\n    return apiRequest<Distributor>(`/distributors/${distributorId}`, {\n        method: 'PUT',\n        body: JSON.stringify(distributor),\n    });\n};\n\n// Función para obtener préstamos de un distribuidor\nexport const getDistributorLoans = async (distributorId: number): Promise<ConsignmentLoan[]> => {\n    return apiRequest<ConsignmentLoan[]>(`/distributors/${distributorId}/loans`);\n};\n\n// Función para crear préstamo de consignación\nexport const createConsignmentLoan = async (loan: Omit<ConsignmentLoan, 'id'>): Promise<ConsignmentLoan> => {\n    return apiRequest<ConsignmentLoan>('/consignments/loans', {\n        method: 'POST',\n        body: JSON.stringify(loan),\n    });\n};\n\n// Función para verificar estado de autenticación\nexport const verifyAuth = async (): Promise<{ username: string; role: string }> => {\n    return apiRequest<{ username: string; role: string }>('/verify');\n};\n\n// Función para obtener perfil de usuario\nexport const getUserProfile = async (): Promise<any> => {\n    return apiRequest('/users/me');\n};\n\n// Función helper para manejo de errores de red\nexport const handleApiError = (error: Error): string => {\n    if (error.message.includes('Network error')) {\n        return 'Error de conexión. Verifica tu conexión a internet e intenta nuevamente.';\n    }\n    if (error.message.includes('Session expired')) {\n        return 'Tu sesión ha expirado. Por favor, inicia sesión nuevamente.';\n    }\n    if (error.message.includes('Access forbidden')) {\n        return 'No tienes permisos para realizar esta acción.';\n    }\n    if (error.message.includes('Server error')) {\n        return 'Error del servidor. Por favor, intenta más tarde.';\n    }\n    return error.message || 'Ha ocurrido un error inesperado.';\n};\n"],"mappings":"2HAAA;AAGA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAExE;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CACzB,MAAO,CACH,cAAc,CAAE,kBAChB;AACJ,CAAC,CACL,CAAC,CAED,KAAM,CAAAC,yBAAyB,CAAGA,CAAA,GAAM,CACpC,MAAO,CACH,cAAc,CAAE,kBAChB;AACJ,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAC,mBAAmB,CAAG,CACxBC,WAAW,CAAE,SAAiC;AAClD,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,cAAAA,CACtBC,QAAgB,CAEH,IADb,CAAAC,OAAoB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAEzB,KAAM,CAAAG,GAAG,CAAGL,QAAQ,CAACM,UAAU,CAAC,MAAM,CAAC,CAAGN,QAAQ,IAAAO,MAAA,CAAMhB,OAAO,EAAAgB,MAAA,CAAGP,QAAQ,CAAE,CAE5E,KAAM,CAAAQ,MAAmB,CAAAC,aAAA,CAAAA,aAAA,IAClBZ,mBAAmB,MACtBa,OAAO,CAAAD,aAAA,CAAAA,aAAA,IACAd,cAAc,CAAC,CAAC,EAChBM,OAAO,CAACS,OAAO,CACrB,EACET,OAAO,CACb,CAED,GAAI,CACA,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACP,GAAG,CAAEG,MAAM,CAAC,CAEzC;AACA,GAAIG,QAAQ,CAACE,MAAM,GAAK,GAAG,CAAE,CACzB;AACA,GAAI,CACA,KAAM,CAAAC,YAAY,CAAC,CAAC,CACpB;AACA,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAH,KAAK,CAACP,GAAG,CAAEG,MAAM,CAAC,CAC9C,GAAI,CAACO,aAAa,CAACC,EAAE,CAAE,CACnB,KAAM,IAAI,CAAAC,KAAK,+BAAAV,MAAA,CAA+BQ,aAAa,CAACF,MAAM,CAAE,CAAC,CACzE,CACA,MAAO,CAAAE,aAAa,CAACG,IAAI,CAAC,CAAC,CAC/B,CAAE,MAAOC,YAAY,CAAE,CACnB;AACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CAC/B,KAAM,IAAI,CAAAL,KAAK,CAAC,sCAAsC,CAAC,CAC3D,CACJ,CAEA,GAAIN,QAAQ,CAACE,MAAM,GAAK,GAAG,CAAE,CACzB,KAAM,IAAI,CAAAI,KAAK,CAAC,sEAAsE,CAAC,CAC3F,CAEA,GAAIN,QAAQ,CAACE,MAAM,GAAK,GAAG,CAAE,CACzB,KAAM,IAAI,CAAAI,KAAK,CAAC,qBAAqB,CAAC,CAC1C,CAEA,GAAIN,QAAQ,CAACE,MAAM,EAAI,GAAG,CAAE,CACxB,KAAM,IAAI,CAAAI,KAAK,CAAC,uCAAuC,CAAC,CAC5D,CAEA,GAAI,CAACN,QAAQ,CAACK,EAAE,CAAE,CACd;AACA,GAAI,CACA,KAAM,CAAAO,SAAS,CAAG,KAAM,CAAAZ,QAAQ,CAACO,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAD,KAAK,CAACM,SAAS,CAACC,MAAM,EAAID,SAAS,CAACE,OAAO,gCAAAlB,MAAA,CAAkCI,QAAQ,CAACE,MAAM,CAAE,CAAC,CAC7G,CAAE,MAAOa,UAAU,CAAE,CACjB,KAAM,IAAI,CAAAT,KAAK,+BAAAV,MAAA,CAA+BI,QAAQ,CAACE,MAAM,CAAE,CAAC,CACpE,CACJ,CAEA;AACA,KAAM,CAAAc,WAAW,CAAGhB,QAAQ,CAACD,OAAO,CAACkB,GAAG,CAAC,cAAc,CAAC,CACxD,GAAI,CAACD,WAAW,EAAI,CAACA,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,CAAE,CAC3D,MAAO,KAAI,CACf,CAEA,MAAO,CAAAlB,QAAQ,CAACO,IAAI,CAAC,CAAC,CAE1B,CAAE,MAAOY,KAAK,CAAE,CACZ,GAAIA,KAAK,WAAY,CAAAb,KAAK,CAAE,CACxB,KAAM,CAAAa,KAAK,CACf,CACA,KAAM,IAAI,CAAAb,KAAK,CAAC,4DAA4D,CAAC,CACjF,CACJ,CAAC,CAED;AACA,MAAO,MAAM,CAAAc,SAAS,CAAG,KAAAA,CAAOC,QAAgB,CAAEC,QAAgB,GAA4D,CAC1H,KAAM,CAAAC,OAAO,CAAG,CACZF,QAAQ,CAAEA,QAAQ,CAClBC,QAAQ,CAAEA,QACd,CAAC,CACD,KAAM,CAAAE,QAAQ,CAAGC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACI,GAAG,CAACC,GAAG,EAAIC,kBAAkB,CAACD,GAAG,CAAC,CAAG,GAAG,CAAGC,kBAAkB,CAACN,OAAO,CAACK,GAAG,CAAyB,CAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAEpJ,KAAM,CAAA9B,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAL,MAAA,CAAIhB,OAAO,WAAU,CAC7CmD,MAAM,CAAE,MAAM,CACdhC,OAAO,CAAE,CACL,cAAc,CAAE,mCACpB,CAAC,CACDiC,IAAI,CAAER,QAAQ,CACdrC,WAAW,CAAE,SAAW;AAC5B,CAAC,CAAC,CAEF,GAAI,CAACa,QAAQ,CAACK,EAAE,CAAE,CACd,KAAM,CAAAO,SAAS,CAAG,KAAM,CAAAZ,QAAQ,CAACO,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAD,KAAK,CAACM,SAAS,CAACC,MAAM,EAAI,cAAc,CAAC,CACvD,CACA,MAAO,CAAAb,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC1B,CAAC,CAED,MAAO,MAAM,CAAA0B,gBAAgB,CAAG,KAAAA,CAAOZ,QAAgB,CAAEa,UAAkB,GAA4D,CACnI,KAAM,CAAAX,OAAO,CAAG,CACZF,QAAQ,CAAEA,QAAQ,CAClBC,QAAQ,CAAEY,UAAY;AAC1B,CAAC,CACD,KAAM,CAAAV,QAAQ,CAAGC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACI,GAAG,CAACC,GAAG,EAAIC,kBAAkB,CAACD,GAAG,CAAC,CAAG,GAAG,CAAGC,kBAAkB,CAACN,OAAO,CAACK,GAAG,CAAyB,CAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAEpJ,KAAM,CAAA9B,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAL,MAAA,CAAIhB,OAAO,uBAAsB,CACzDmD,MAAM,CAAE,MAAM,CACdhC,OAAO,CAAE,CACL,cAAc,CAAE,mCACpB,CAAC,CACDiC,IAAI,CAAER,QAAQ,CACdrC,WAAW,CAAE,SAAW;AAC5B,CAAC,CAAC,CAEF,GAAI,CAACa,QAAQ,CAACK,EAAE,CAAE,CACd,KAAM,CAAAO,SAAS,CAAG,KAAM,CAAAZ,QAAQ,CAACO,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAD,KAAK,CAACM,SAAS,CAACC,MAAM,EAAI,0BAA0B,CAAC,CACnE,CACA,MAAO,CAAAb,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC1B,CAAC,CAED;AACA,MAAO,MAAM,CAAAJ,YAAY,CAAG,KAAAA,CAAA,GAAmE,CAC3F,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAL,MAAA,CAAIhB,OAAO,aAAY,CAC/CmD,MAAM,CAAE,MAAM,CACd5C,WAAW,CAAE,SACjB,CAAC,CAAC,CAEF,GAAI,CAACa,QAAQ,CAACK,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC9C,CACA,MAAO,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC1B,CAAC,CAED;AACA,MAAO,MAAM,CAAA4B,UAAU,CAAG,KAAAA,CAAA,GAA2B,CACjD,KAAM,CAAAlC,KAAK,IAAAL,MAAA,CAAIhB,OAAO,YAAW,CAC7BmD,MAAM,CAAE,MAAM,CACd5C,WAAW,CAAE,SACjB,CAAC,CAAC,CACN,CAAC,CAED;AAEA;AACA;AASA,MAAO,MAAM,CAAAiD,WAAW,CAAG,cAAAA,CAAA,CAA8E,IAAvE,CAAAC,IAAY,CAAA9C,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAAE,CAAA+C,KAAa,CAAA/C,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAClE,MAAO,CAAAH,UAAU,oBAAAQ,MAAA,CAAyCyC,IAAI,YAAAzC,MAAA,CAAU0C,KAAK,CAAE,CAAC,CACpF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAAA,CAAA,GAAgC,CAC1D,KAAM,CAAAvC,QAAQ,CAAG,KAAM,CAAAoC,WAAW,CAAC,CAAC,CAAE,IAAI,CAAC,CAAE;AAC7C,MAAO,CAAApC,QAAQ,CAACwC,QAAQ,CAC5B,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAO,CAAAC,OAAgB,EAAuB,CACvE,MAAO,CAAAtD,UAAU,CAAU,YAAY,CAAE,CACrC2C,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEW,IAAI,CAACC,SAAS,CAACF,OAAO,CAChC,CAAC,CAAC,CACN,CAAC,CAED,MAAO,MAAM,CAAAG,aAAa,CAAG,KAAAA,CAAOC,SAAiB,CAAEJ,OAAyB,GAAuB,CACnG,MAAO,CAAAtD,UAAU,cAAAQ,MAAA,CAAuBkD,SAAS,EAAI,CACjDf,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEW,IAAI,CAACC,SAAS,CAACF,OAAO,CAChC,CAAC,CAAC,CACN,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,QAAQ,CAAG,KAAO,CAAAC,QAAqB,EAAmB,CACnE,MAAO,CAAA5D,UAAU,CAAC,YAAY,CAAE,CAC5B2C,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEW,IAAI,CAACC,SAAS,CAACI,QAAQ,CACjC,CAAC,CAAC,CACN,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,+BAA+B,CAAG,KAAO,CAAAf,UAAkB,EAAsE,CAC1I;AACA,KAAM,CAAAgB,aAAa,CAAG,KAAM,CAAAjD,KAAK,IAAAL,MAAA,CAAIhB,OAAO,cAAAkB,aAAA,EACxCC,OAAO,CAAEd,yBAAyB,CAAC,CAAC,EACjCC,mBAAmB,CACzB,CAAC,CACF,GAAI,CAACgE,aAAa,CAAC7C,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC/D,KAAM,CAAA6C,KAAwB,CAAG,KAAM,CAAAD,aAAa,CAAC3C,IAAI,CAAC,CAAC,CAE3D;AACA,KAAM,CAAA6C,gBAAgB,CAAG,KAAM,CAAAnD,KAAK,IAAAL,MAAA,CAAIhB,OAAO,eAAAkB,aAAA,EAC3CC,OAAO,CAAEd,yBAAyB,CAAC,CAAC,EACjCC,mBAAmB,CACzB,CAAC,CACF,GAAI,CAACkE,gBAAgB,CAAC/C,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CACrE,KAAM,CAAA+C,WAAW,CAAG,KAAM,CAAAD,gBAAgB,CAAC7C,IAAI,CAAC,CAAC,CACjD,KAAM,CAAAiC,QAAmB,CAAGc,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,CAAGA,WAAW,CAAGA,WAAW,CAACb,QAAQ,EAAI,EAAE,CAEjG,KAAM,CAAAgB,iBAAiB,CAAGL,KAAK,CAACxB,GAAG,CAAC8B,IAAI,EAAA3D,aAAA,CAAAA,aAAA,IACjC2D,IAAI,MACPf,OAAO,CAAEF,QAAQ,CAACkB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,EAAE,GAAKH,IAAI,CAACI,UAAU,CAAC,EAAI,IAAI,EAC/D,CAAC,CAEH;AACA;AACA,KAAM,CAAAC,WAAwB,CAAG,CAC7BF,EAAE,CAAE,CAAC,CAAE;AACPG,IAAI,CAAE,0BAA0B,CAChCC,WAAW,CAAE9B,UAAU,CACvB+B,YAAY,CAAE,EAClB,CAAC,CAED,MAAO,CAAEd,KAAK,CAAEK,iBAAiB,CAAEM,WAAY,CAAC,CACpD,CAAC,CAED,MAAO,MAAM,CAAAI,qBAAqB,CAAG,KAAO,CAAAC,UAAoC,EAAmB,CAC/F,MAAO,CAAA/E,UAAU,CAAC,uBAAuB,CAAE,CACvC2C,MAAM,CAAE,MAAM,CACdhC,OAAO,CAAEd,yBAAyB,CAAC,CAAC,CACpC+C,IAAI,CAAEW,IAAI,CAACC,SAAS,CAACuB,UAAU,CACnC,CAAC,CAAC,CACN,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAO,CAAAC,KAAa,EAAyB,CACvE,MAAO,CAAAjF,UAAU,uBAAAQ,MAAA,CAAkCiC,kBAAkB,CAACwC,KAAK,CAAC,CAAE,CAAC,CACnF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAO,CAAAxB,SAAiB,EAAoB,CACrE,MAAO,CAAA1D,UAAU,cAAAQ,MAAA,CAAoBkD,SAAS,EAAI,CAC9Cf,MAAM,CAAE,QACZ,CAAC,CAAC,CACN,CAAC,CAED;AACA,MAAO,MAAM,CAAAwC,UAAU,CAAG,KAAO,CAAAzB,SAAiB,EAAuB,CACrE,MAAO,CAAA1D,UAAU,cAAAQ,MAAA,CAAuBkD,SAAS,CAAE,CAAC,CACxD,CAAC,CAED;AACA,MAAO,MAAM,CAAA0B,QAAQ,CAAG,KAAAA,CAAA,GAA0B,CAC9C,MAAO,CAAApF,UAAU,CAAC,QAAQ,CAAC,CAC/B,CAAC,CAED;AACA,MAAO,MAAM,CAAAqF,eAAe,CAAG,KAAAA,CAAA,GAAoC,CAC/D,MAAO,CAAArF,UAAU,CAAgB,gBAAgB,CAAC,CACtD,CAAC,CAED;AACA,MAAO,MAAM,CAAAsF,iBAAiB,CAAG,KAAO,CAAAZ,WAAoC,EAA2B,CACnG,MAAO,CAAA1E,UAAU,CAAc,gBAAgB,CAAE,CAC7C2C,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEW,IAAI,CAACC,SAAS,CAACkB,WAAW,CACpC,CAAC,CAAC,CACN,CAAC,CAED;AACA,MAAO,MAAM,CAAAa,iBAAiB,CAAG,KAAAA,CAAOC,aAAqB,CAAEd,WAAiC,GAA2B,CACvH,MAAO,CAAA1E,UAAU,kBAAAQ,MAAA,CAA+BgF,aAAa,EAAI,CAC7D7C,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEW,IAAI,CAACC,SAAS,CAACkB,WAAW,CACpC,CAAC,CAAC,CACN,CAAC,CAED;AACA,MAAO,MAAM,CAAAe,mBAAmB,CAAG,KAAO,CAAAD,aAAqB,EAAiC,CAC5F,MAAO,CAAAxF,UAAU,kBAAAQ,MAAA,CAAqCgF,aAAa,UAAQ,CAAC,CAChF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,qBAAqB,CAAG,KAAO,CAAArB,IAAiC,EAA+B,CACxG,MAAO,CAAArE,UAAU,CAAkB,qBAAqB,CAAE,CACtD2C,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEW,IAAI,CAACC,SAAS,CAACa,IAAI,CAC7B,CAAC,CAAC,CACN,CAAC,CAED;AACA,MAAO,MAAM,CAAAsB,UAAU,CAAG,KAAAA,CAAA,GAAyD,CAC/E,MAAO,CAAA3F,UAAU,CAAqC,SAAS,CAAC,CACpE,CAAC,CAED;AACA,MAAO,MAAM,CAAA4F,cAAc,CAAG,KAAAA,CAAA,GAA0B,CACpD,MAAO,CAAA5F,UAAU,CAAC,WAAW,CAAC,CAClC,CAAC,CAED;AACA,MAAO,MAAM,CAAA6F,cAAc,CAAI9D,KAAY,EAAa,CACpD,GAAIA,KAAK,CAACL,OAAO,CAACI,QAAQ,CAAC,eAAe,CAAC,CAAE,CACzC,MAAO,0EAA0E,CACrF,CACA,GAAIC,KAAK,CAACL,OAAO,CAACI,QAAQ,CAAC,iBAAiB,CAAC,CAAE,CAC3C,MAAO,6DAA6D,CACxE,CACA,GAAIC,KAAK,CAACL,OAAO,CAACI,QAAQ,CAAC,kBAAkB,CAAC,CAAE,CAC5C,MAAO,+CAA+C,CAC1D,CACA,GAAIC,KAAK,CAACL,OAAO,CAACI,QAAQ,CAAC,cAAc,CAAC,CAAE,CACxC,MAAO,mDAAmD,CAC9D,CACA,MAAO,CAAAC,KAAK,CAACL,OAAO,EAAI,kCAAkC,CAC9D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}