{"ast":null,"code":"import _objectSpread from\"/Users/user/TuAppDeAccesorios/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * Sistema de caché del lado del cliente\n */class ClientCacheManager{constructor(){let config=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this.cache=new Map();this.config=void 0;this.config=_objectSpread({defaultTTL:5*60*1000,// 5 minutos por defecto\nmaxSize:100,// Máximo 100 elementos\nstorageKey:'app_cache'},config);this.loadFromStorage();this.startCleanupTimer();}/**\n   * Almacena un elemento en el caché\n   */set(key,data,ttl){const expireTime=ttl||this.config.defaultTTL;const item={data,timestamp:Date.now(),ttl:expireTime};// Si el caché está lleno, eliminar el elemento más antiguo\nif(this.cache.size>=this.config.maxSize){this.evictOldest();}this.cache.set(key,item);this.saveToStorage();}/**\n   * Obtiene un elemento del caché\n   */get(key){const item=this.cache.get(key);if(!item){return null;}// Verificar si el elemento ha expirado\nif(this.isExpired(item)){this.cache.delete(key);this.saveToStorage();return null;}return item.data;}/**\n   * Verifica si un elemento existe en el caché y no ha expirado\n   */has(key){const item=this.cache.get(key);return item?!this.isExpired(item):false;}/**\n   * Elimina un elemento del caché\n   */delete(key){const result=this.cache.delete(key);if(result){this.saveToStorage();}return result;}/**\n   * Elimina elementos que coincidan con un patrón\n   */deletePattern(pattern){const regex=new RegExp(pattern);let deletedCount=0;for(const key of this.cache.keys()){if(regex.test(key)){this.cache.delete(key);deletedCount++;}}if(deletedCount>0){this.saveToStorage();}return deletedCount;}/**\n   * Limpia todo el caché\n   */clear(){this.cache.clear();this.saveToStorage();}/**\n   * Obtiene estadísticas del caché\n   */getStats(){// Estas estadísticas se podrían mejorar con un tracking más detallado\nreturn{size:this.cache.size,maxSize:this.config.maxSize,hitRate:0,// TODO: Implementar tracking de hits/misses\ntotalRequests:0,hits:0,misses:0};}/**\n   * Verifica si un elemento ha expirado\n   */isExpired(item){return Date.now()-item.timestamp>item.ttl;}/**\n   * Elimina el elemento más antiguo del caché\n   */evictOldest(){let oldestKey=null;let oldestTimestamp=Date.now();for(const[key,item]of this.cache.entries()){if(item.timestamp<oldestTimestamp){oldestTimestamp=item.timestamp;oldestKey=key;}}if(oldestKey){this.cache.delete(oldestKey);}}/**\n   * Limpia elementos expirados\n   */cleanup(){const expiredKeys=[];for(const[key,item]of this.cache.entries()){if(this.isExpired(item)){expiredKeys.push(key);}}if(expiredKeys.length>0){for(const key of expiredKeys){this.cache.delete(key);}this.saveToStorage();}}/**\n   * Inicia el timer de limpieza periódica\n   */startCleanupTimer(){setInterval(()=>{this.cleanup();},60000);// Limpiar cada minuto\n}/**\n   * Guarda el caché en localStorage\n   */saveToStorage(){try{const serializedCache=Array.from(this.cache.entries());localStorage.setItem(this.config.storageKey,JSON.stringify(serializedCache));}catch(error){console.warn('Error saving cache to localStorage:',error);}}/**\n   * Carga el caché desde localStorage\n   */loadFromStorage(){try{const stored=localStorage.getItem(this.config.storageKey);if(stored){const parsed=JSON.parse(stored);this.cache=new Map(parsed);// Limpiar elementos expirados al cargar\nthis.cleanup();}}catch(error){console.warn('Error loading cache from localStorage:',error);this.cache.clear();}}}// Configuraciones específicas para diferentes tipos de datos\nexport const CacheSettings={PRODUCTS:{TTL:2*60*1000,// 2 minutos\nPREFIX:'products'},PRODUCT_SEARCH:{TTL:30*1000,// 30 segundos\nPREFIX:'search'},USER_SESSION:{TTL:15*60*1000,// 15 minutos\nPREFIX:'session'},STATIC_DATA:{TTL:30*60*1000,// 30 minutos\nPREFIX:'static'}};// Instancia global del caché\nexport const clientCache=new ClientCacheManager({defaultTTL:5*60*1000,maxSize:200,storageKey:'tuapp_cache'});// Funciones de utilidad para caché específico\nexport function cacheProductsList(products){let skip=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:20;const key=\"\".concat(CacheSettings.PRODUCTS.PREFIX,\":list:\").concat(skip,\":\").concat(limit);clientCache.set(key,products,CacheSettings.PRODUCTS.TTL);}export function getCachedProductsList(){let skip=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;const key=\"\".concat(CacheSettings.PRODUCTS.PREFIX,\":list:\").concat(skip,\":\").concat(limit);return clientCache.get(key);}export function cacheProductSearch(query,results){const key=\"\".concat(CacheSettings.PRODUCT_SEARCH.PREFIX,\":\").concat(query);clientCache.set(key,results,CacheSettings.PRODUCT_SEARCH.TTL);}export function getCachedProductSearch(query){const key=\"\".concat(CacheSettings.PRODUCT_SEARCH.PREFIX,\":\").concat(query);return clientCache.get(key);}export function invalidateProductsCache(){clientCache.deletePattern(\"\".concat(CacheSettings.PRODUCTS.PREFIX,\":.*\"));clientCache.deletePattern(\"\".concat(CacheSettings.PRODUCT_SEARCH.PREFIX,\":.*\"));}export function cacheUserSession(userId,sessionData){const key=\"\".concat(CacheSettings.USER_SESSION.PREFIX,\":\").concat(userId);clientCache.set(key,sessionData,CacheSettings.USER_SESSION.TTL);}export function getCachedUserSession(userId){const key=\"\".concat(CacheSettings.USER_SESSION.PREFIX,\":\").concat(userId);return clientCache.get(key);}// Hook para usar caché en React\nexport function useClientCache(){const setCache=(key,data,ttl)=>{clientCache.set(key,data,ttl);};const getCache=key=>{return clientCache.get(key);};const hasCache=key=>{return clientCache.has(key);};const deleteCache=key=>{return clientCache.delete(key);};const clearCache=()=>{clientCache.clear();};const getStats=()=>{return clientCache.getStats();};return{setCache,getCache,hasCache,deleteCache,clearCache,getStats};}","map":{"version":3,"names":["ClientCacheManager","constructor","config","arguments","length","undefined","cache","Map","_objectSpread","defaultTTL","maxSize","storageKey","loadFromStorage","startCleanupTimer","set","key","data","ttl","expireTime","item","timestamp","Date","now","size","evictOldest","saveToStorage","get","isExpired","delete","has","result","deletePattern","pattern","regex","RegExp","deletedCount","keys","test","clear","getStats","hitRate","totalRequests","hits","misses","oldestKey","oldestTimestamp","entries","cleanup","expiredKeys","push","setInterval","serializedCache","Array","from","localStorage","setItem","JSON","stringify","error","console","warn","stored","getItem","parsed","parse","CacheSettings","PRODUCTS","TTL","PREFIX","PRODUCT_SEARCH","USER_SESSION","STATIC_DATA","clientCache","cacheProductsList","products","skip","limit","concat","getCachedProductsList","cacheProductSearch","query","results","getCachedProductSearch","invalidateProductsCache","cacheUserSession","userId","sessionData","getCachedUserSession","useClientCache","setCache","getCache","hasCache","deleteCache","clearCache"],"sources":["/Users/user/TuAppDeAccesorios/frontend/src/services/clientCache.ts"],"sourcesContent":["/**\n * Sistema de caché del lado del cliente\n */\n\ninterface CacheItem {\n  data: any;\n  timestamp: number;\n  ttl: number; // Time to live in milliseconds\n}\n\ninterface CacheConfig {\n  defaultTTL: number;\n  maxSize: number;\n  storageKey: string;\n}\n\nclass ClientCacheManager {\n  private cache: Map<string, CacheItem> = new Map();\n  private config: CacheConfig;\n\n  constructor(config: Partial<CacheConfig> = {}) {\n    this.config = {\n      defaultTTL: 5 * 60 * 1000, // 5 minutos por defecto\n      maxSize: 100, // Máximo 100 elementos\n      storageKey: 'app_cache',\n      ...config\n    };\n\n    this.loadFromStorage();\n    this.startCleanupTimer();\n  }\n\n  /**\n   * Almacena un elemento en el caché\n   */\n  set(key: string, data: any, ttl?: number): void {\n    const expireTime = ttl || this.config.defaultTTL;\n    const item: CacheItem = {\n      data,\n      timestamp: Date.now(),\n      ttl: expireTime\n    };\n\n    // Si el caché está lleno, eliminar el elemento más antiguo\n    if (this.cache.size >= this.config.maxSize) {\n      this.evictOldest();\n    }\n\n    this.cache.set(key, item);\n    this.saveToStorage();\n  }\n\n  /**\n   * Obtiene un elemento del caché\n   */\n  get(key: string): any | null {\n    const item = this.cache.get(key);\n    \n    if (!item) {\n      return null;\n    }\n\n    // Verificar si el elemento ha expirado\n    if (this.isExpired(item)) {\n      this.cache.delete(key);\n      this.saveToStorage();\n      return null;\n    }\n\n    return item.data;\n  }\n\n  /**\n   * Verifica si un elemento existe en el caché y no ha expirado\n   */\n  has(key: string): boolean {\n    const item = this.cache.get(key);\n    return item ? !this.isExpired(item) : false;\n  }\n\n  /**\n   * Elimina un elemento del caché\n   */\n  delete(key: string): boolean {\n    const result = this.cache.delete(key);\n    if (result) {\n      this.saveToStorage();\n    }\n    return result;\n  }\n\n  /**\n   * Elimina elementos que coincidan con un patrón\n   */\n  deletePattern(pattern: string): number {\n    const regex = new RegExp(pattern);\n    let deletedCount = 0;\n\n    for (const key of this.cache.keys()) {\n      if (regex.test(key)) {\n        this.cache.delete(key);\n        deletedCount++;\n      }\n    }\n\n    if (deletedCount > 0) {\n      this.saveToStorage();\n    }\n\n    return deletedCount;\n  }\n\n  /**\n   * Limpia todo el caché\n   */\n  clear(): void {\n    this.cache.clear();\n    this.saveToStorage();\n  }\n\n  /**\n   * Obtiene estadísticas del caché\n   */\n  getStats(): {\n    size: number;\n    maxSize: number;\n    hitRate: number;\n    totalRequests: number;\n    hits: number;\n    misses: number;\n  } {\n    // Estas estadísticas se podrían mejorar con un tracking más detallado\n    return {\n      size: this.cache.size,\n      maxSize: this.config.maxSize,\n      hitRate: 0, // TODO: Implementar tracking de hits/misses\n      totalRequests: 0,\n      hits: 0,\n      misses: 0\n    };\n  }\n\n  /**\n   * Verifica si un elemento ha expirado\n   */\n  private isExpired(item: CacheItem): boolean {\n    return Date.now() - item.timestamp > item.ttl;\n  }\n\n  /**\n   * Elimina el elemento más antiguo del caché\n   */\n  private evictOldest(): void {\n    let oldestKey: string | null = null;\n    let oldestTimestamp = Date.now();\n\n    for (const [key, item] of this.cache.entries()) {\n      if (item.timestamp < oldestTimestamp) {\n        oldestTimestamp = item.timestamp;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey) {\n      this.cache.delete(oldestKey);\n    }\n  }\n\n  /**\n   * Limpia elementos expirados\n   */\n  private cleanup(): void {\n    const expiredKeys: string[] = [];\n\n    for (const [key, item] of this.cache.entries()) {\n      if (this.isExpired(item)) {\n        expiredKeys.push(key);\n      }\n    }\n\n    if (expiredKeys.length > 0) {\n      for (const key of expiredKeys) {\n        this.cache.delete(key);\n      }\n      this.saveToStorage();\n    }\n  }\n\n  /**\n   * Inicia el timer de limpieza periódica\n   */\n  private startCleanupTimer(): void {\n    setInterval(() => {\n      this.cleanup();\n    }, 60000); // Limpiar cada minuto\n  }\n\n  /**\n   * Guarda el caché en localStorage\n   */\n  private saveToStorage(): void {\n    try {\n      const serializedCache = Array.from(this.cache.entries());\n      localStorage.setItem(this.config.storageKey, JSON.stringify(serializedCache));\n    } catch (error) {\n      console.warn('Error saving cache to localStorage:', error);\n    }\n  }\n\n  /**\n   * Carga el caché desde localStorage\n   */\n  private loadFromStorage(): void {\n    try {\n      const stored = localStorage.getItem(this.config.storageKey);\n      if (stored) {\n        const parsed = JSON.parse(stored);\n        this.cache = new Map(parsed);\n        // Limpiar elementos expirados al cargar\n        this.cleanup();\n      }\n    } catch (error) {\n      console.warn('Error loading cache from localStorage:', error);\n      this.cache.clear();\n    }\n  }\n}\n\n// Configuraciones específicas para diferentes tipos de datos\nexport const CacheSettings = {\n  PRODUCTS: {\n    TTL: 2 * 60 * 1000, // 2 minutos\n    PREFIX: 'products'\n  },\n  PRODUCT_SEARCH: {\n    TTL: 30 * 1000, // 30 segundos\n    PREFIX: 'search'\n  },\n  USER_SESSION: {\n    TTL: 15 * 60 * 1000, // 15 minutos\n    PREFIX: 'session'\n  },\n  STATIC_DATA: {\n    TTL: 30 * 60 * 1000, // 30 minutos\n    PREFIX: 'static'\n  }\n};\n\n// Instancia global del caché\nexport const clientCache = new ClientCacheManager({\n  defaultTTL: 5 * 60 * 1000,\n  maxSize: 200,\n  storageKey: 'tuapp_cache'\n});\n\n// Funciones de utilidad para caché específico\n\nexport function cacheProductsList(products: any[], skip: number = 0, limit: number = 20): void {\n  const key = `${CacheSettings.PRODUCTS.PREFIX}:list:${skip}:${limit}`;\n  clientCache.set(key, products, CacheSettings.PRODUCTS.TTL);\n}\n\nexport function getCachedProductsList(skip: number = 0, limit: number = 20): any[] | null {\n  const key = `${CacheSettings.PRODUCTS.PREFIX}:list:${skip}:${limit}`;\n  return clientCache.get(key);\n}\n\nexport function cacheProductSearch(query: string, results: any[]): void {\n  const key = `${CacheSettings.PRODUCT_SEARCH.PREFIX}:${query}`;\n  clientCache.set(key, results, CacheSettings.PRODUCT_SEARCH.TTL);\n}\n\nexport function getCachedProductSearch(query: string): any[] | null {\n  const key = `${CacheSettings.PRODUCT_SEARCH.PREFIX}:${query}`;\n  return clientCache.get(key);\n}\n\nexport function invalidateProductsCache(): void {\n  clientCache.deletePattern(`${CacheSettings.PRODUCTS.PREFIX}:.*`);\n  clientCache.deletePattern(`${CacheSettings.PRODUCT_SEARCH.PREFIX}:.*`);\n}\n\nexport function cacheUserSession(userId: number, sessionData: any): void {\n  const key = `${CacheSettings.USER_SESSION.PREFIX}:${userId}`;\n  clientCache.set(key, sessionData, CacheSettings.USER_SESSION.TTL);\n}\n\nexport function getCachedUserSession(userId: number): any | null {\n  const key = `${CacheSettings.USER_SESSION.PREFIX}:${userId}`;\n  return clientCache.get(key);\n}\n\n// Hook para usar caché en React\nexport function useClientCache() {\n  const setCache = (key: string, data: any, ttl?: number) => {\n    clientCache.set(key, data, ttl);\n  };\n\n  const getCache = (key: string) => {\n    return clientCache.get(key);\n  };\n\n  const hasCache = (key: string) => {\n    return clientCache.has(key);\n  };\n\n  const deleteCache = (key: string) => {\n    return clientCache.delete(key);\n  };\n\n  const clearCache = () => {\n    clientCache.clear();\n  };\n\n  const getStats = () => {\n    return clientCache.getStats();\n  };\n\n  return {\n    setCache,\n    getCache,\n    hasCache,\n    deleteCache,\n    clearCache,\n    getStats\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}