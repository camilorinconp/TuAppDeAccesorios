{"ast":null,"code":"import _objectSpread from\"/Users/user/TuAppDeAccesorios/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/user/TuAppDeAccesorios/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"executeWithErrorHandling\"],_excluded2=[\"executeWithErrorHandling\"];import{useState,useCallback}from'react';import{APIErrorHandler}from'../services/apiErrorHandler';import{useReduxAuth}from'./useReduxAuth';import{getCachedProductsList,cacheProductsList,getCachedProductSearch,cacheProductSearch,invalidateProductsCache}from'../services/clientCache';/**\n * Hook personalizado para manejo de errores de API\n */export const useApiError=()=>{const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(false);const{logout}=useReduxAuth();/**\n   * Maneja errores de API con lógica específica\n   */const handleApiError=useCallback(error=>{console.error('API Error:',error);// Si el error requiere reautenticación, cerrar sesión\nif(APIErrorHandler.requiresReauth(error)){logout();return;}// Configurar el error para mostrar al usuario\nsetError(error);},[logout]);/**\n   * Ejecuta una función async y maneja los errores automáticamente\n   */const executeWithErrorHandling=useCallback(async function(apiCall){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const{showError=true,onSuccess,onError}=options;setIsLoading(true);setError(null);try{const result=await apiCall();if(onSuccess){onSuccess(result);}return result;}catch(err){if(showError){handleApiError(err);}if(onError){onError(err);}return undefined;}finally{setIsLoading(false);}},[handleApiError]);/**\n   * Limpia el error actual\n   */const clearError=useCallback(()=>{setError(null);},[]);/**\n   * Verifica si un error es recuperable\n   */const isRecoverable=error?APIErrorHandler.isRecoverableError(error):false;/**\n   * Obtiene mensaje amigable del error\n   */const userMessage=error?APIErrorHandler.getUserFriendlyMessage(error):'';return{error,isLoading,handleApiError,executeWithErrorHandling,clearError,isRecoverable,userMessage};};/**\n * Hook específico para operaciones de productos\n */export const useProductsApi=()=>{const _useApiError=useApiError(),{executeWithErrorHandling}=_useApiError,errorState=_objectWithoutProperties(_useApiError,_excluded);const createProductWithErrorHandling=useCallback(async(productData,onSuccess)=>{const{createProduct}=await import('../services/api');return executeWithErrorHandling(()=>createProduct(productData),{onSuccess:()=>{// Invalidar caché de productos al crear uno nuevo\ninvalidateProductsCache();if(onSuccess)onSuccess();}});},[executeWithErrorHandling]);const updateProductWithErrorHandling=useCallback(async(productId,productData,onSuccess)=>{const{updateProduct}=await import('../services/api');return executeWithErrorHandling(()=>updateProduct(productId,productData),{onSuccess:()=>{// Invalidar caché de productos al actualizar uno\ninvalidateProductsCache();if(onSuccess)onSuccess();}});},[executeWithErrorHandling]);const getProductsWithErrorHandling=useCallback(async function(){let skip=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;// Intentar obtener del caché primero\nconst cachedResult=getCachedProductsList(skip,limit);if(cachedResult){return cachedResult;}const{getProducts}=await import('../services/api');return executeWithErrorHandling(async()=>{const result=await getProducts(skip,limit);// Cachear el resultado\nif(result){cacheProductsList(result.products,skip,limit);}return result;});},[executeWithErrorHandling]);const searchProductsWithErrorHandling=useCallback(async query=>{// Intentar obtener del caché primero\nconst cachedResult=getCachedProductSearch(query);if(cachedResult){return cachedResult;}const{searchProducts}=await import('../services/api');return executeWithErrorHandling(async()=>{const result=await searchProducts(query);// Cachear el resultado\nif(result){cacheProductSearch(query,result);}return result;},{showError:false}// No mostrar errores de búsqueda automáticamente\n);},[executeWithErrorHandling]);return _objectSpread(_objectSpread({},errorState),{},{createProduct:createProductWithErrorHandling,updateProduct:updateProductWithErrorHandling,getProducts:getProductsWithErrorHandling,searchProducts:searchProductsWithErrorHandling});};/**\n * Hook específico para operaciones de ventas\n */export const useSalesApi=()=>{const _useApiError2=useApiError(),{executeWithErrorHandling}=_useApiError2,errorState=_objectWithoutProperties(_useApiError2,_excluded2);const processSaleWithErrorHandling=useCallback(async(saleData,onSuccess)=>{const{postSale}=await import('../services/api');return executeWithErrorHandling(()=>postSale(saleData),{onSuccess:()=>{// Invalidar caché de productos al hacer una venta (cambia el stock)\ninvalidateProductsCache();if(onSuccess)onSuccess();}});},[executeWithErrorHandling]);return _objectSpread(_objectSpread({},errorState),{},{processSale:processSaleWithErrorHandling});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}