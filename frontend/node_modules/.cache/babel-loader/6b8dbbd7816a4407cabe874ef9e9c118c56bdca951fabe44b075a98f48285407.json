{"ast":null,"code":"import { useState, useCallback } from 'react';\nimport { APIErrorHandler } from '../services/apiErrorHandler';\nimport { useReduxAuth } from './useReduxAuth';\nimport { getCachedProductsList, cacheProductsList, getCachedProductSearch, cacheProductSearch, invalidateProductsCache } from '../services/clientCache';\n\n/**\n * Hook personalizado para manejo de errores de API\n */\nexport const useApiError = () => {\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    logout\n  } = useReduxAuth();\n\n  /**\n   * Maneja errores de API con lógica específica\n   */\n  const handleApiError = useCallback(error => {\n    console.error('API Error:', error);\n\n    // Si el error requiere reautenticación, cerrar sesión\n    if (APIErrorHandler.requiresReauth(error)) {\n      logout();\n      return;\n    }\n\n    // Configurar el error para mostrar al usuario\n    setError(error);\n  }, [logout]);\n\n  /**\n   * Ejecuta una función async y maneja los errores automáticamente\n   */\n  const executeWithErrorHandling = useCallback(async (apiCall, options = {}) => {\n    const {\n      showError = true,\n      onSuccess,\n      onError\n    } = options;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const result = await apiCall();\n      if (onSuccess) {\n        onSuccess(result);\n      }\n      return result;\n    } catch (err) {\n      if (showError) {\n        handleApiError(err);\n      }\n      if (onError) {\n        onError(err);\n      }\n      return undefined;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [handleApiError]);\n\n  /**\n   * Limpia el error actual\n   */\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  /**\n   * Verifica si un error es recuperable\n   */\n  const isRecoverable = error ? APIErrorHandler.isRecoverableError(error) : false;\n\n  /**\n   * Obtiene mensaje amigable del error\n   */\n  const userMessage = error ? APIErrorHandler.getUserFriendlyMessage(error) : '';\n  return {\n    error,\n    isLoading,\n    handleApiError,\n    executeWithErrorHandling,\n    clearError,\n    isRecoverable,\n    userMessage\n  };\n};\n\n/**\n * Hook específico para operaciones de productos\n */\nexport const useProductsApi = () => {\n  const {\n    executeWithErrorHandling,\n    ...errorState\n  } = useApiError();\n  const createProductWithErrorHandling = useCallback(async (productData, onSuccess) => {\n    const {\n      createProduct\n    } = await import('../services/api');\n    return executeWithErrorHandling(() => createProduct(productData), {\n      onSuccess: () => {\n        // Invalidar caché de productos al crear uno nuevo\n        invalidateProductsCache();\n        if (onSuccess) onSuccess();\n      }\n    });\n  }, [executeWithErrorHandling]);\n  const updateProductWithErrorHandling = useCallback(async (productId, productData, onSuccess) => {\n    const {\n      updateProduct\n    } = await import('../services/api');\n    return executeWithErrorHandling(() => updateProduct(productId, productData), {\n      onSuccess: () => {\n        // Invalidar caché de productos al actualizar uno\n        invalidateProductsCache();\n        if (onSuccess) onSuccess();\n      }\n    });\n  }, [executeWithErrorHandling]);\n  const getProductsWithErrorHandling = useCallback(async (skip = 0, limit = 20) => {\n    // Intentar obtener del caché primero\n    const cachedResult = getCachedProductsList(skip, limit);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const {\n      getProducts\n    } = await import('../services/api');\n    return executeWithErrorHandling(async () => {\n      const result = await getProducts(skip, limit);\n      // Cachear el resultado\n      if (result) {\n        cacheProductsList(result.products, skip, limit);\n      }\n      return result;\n    });\n  }, [executeWithErrorHandling]);\n  const searchProductsWithErrorHandling = useCallback(async query => {\n    // Intentar obtener del caché primero\n    const cachedResult = getCachedProductSearch(query);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const {\n      searchProducts\n    } = await import('../services/api');\n    return executeWithErrorHandling(async () => {\n      const result = await searchProducts(query);\n      // Cachear el resultado\n      if (result) {\n        cacheProductSearch(query, result);\n      }\n      return result;\n    }, {\n      showError: false\n    } // No mostrar errores de búsqueda automáticamente\n    );\n  }, [executeWithErrorHandling]);\n  return {\n    ...errorState,\n    createProduct: createProductWithErrorHandling,\n    updateProduct: updateProductWithErrorHandling,\n    getProducts: getProductsWithErrorHandling,\n    searchProducts: searchProductsWithErrorHandling\n  };\n};\n\n/**\n * Hook específico para operaciones de ventas\n */\nexport const useSalesApi = () => {\n  const {\n    executeWithErrorHandling,\n    ...errorState\n  } = useApiError();\n  const processSaleWithErrorHandling = useCallback(async (saleData, onSuccess) => {\n    const {\n      postSale\n    } = await import('../services/api');\n    return executeWithErrorHandling(() => postSale(saleData), {\n      onSuccess: () => {\n        // Invalidar caché de productos al hacer una venta (cambia el stock)\n        invalidateProductsCache();\n        if (onSuccess) onSuccess();\n      }\n    });\n  }, [executeWithErrorHandling]);\n  return {\n    ...errorState,\n    processSale: processSaleWithErrorHandling\n  };\n};","map":{"version":3,"names":["useState","useCallback","APIErrorHandler","useReduxAuth","getCachedProductsList","cacheProductsList","getCachedProductSearch","cacheProductSearch","invalidateProductsCache","useApiError","error","setError","isLoading","setIsLoading","logout","handleApiError","console","requiresReauth","executeWithErrorHandling","apiCall","options","showError","onSuccess","onError","result","err","undefined","clearError","isRecoverable","isRecoverableError","userMessage","getUserFriendlyMessage","useProductsApi","errorState","createProductWithErrorHandling","productData","createProduct","updateProductWithErrorHandling","productId","updateProduct","getProductsWithErrorHandling","skip","limit","cachedResult","getProducts","products","searchProductsWithErrorHandling","query","searchProducts","useSalesApi","processSaleWithErrorHandling","saleData","postSale","processSale"],"sources":["/Users/user/TuAppDeAccesorios/frontend/src/hooks/useApiError.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { APIErrorHandler } from '../services/apiErrorHandler';\nimport { useReduxAuth } from './useReduxAuth';\nimport { \n  getCachedProductsList, \n  cacheProductsList, \n  getCachedProductSearch, \n  cacheProductSearch,\n  invalidateProductsCache \n} from '../services/clientCache';\n\n/**\n * Hook personalizado para manejo de errores de API\n */\nexport const useApiError = () => {\n  const [error, setError] = useState<Error | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { logout } = useReduxAuth();\n\n  /**\n   * Maneja errores de API con lógica específica\n   */\n  const handleApiError = useCallback((error: any) => {\n    console.error('API Error:', error);\n\n    // Si el error requiere reautenticación, cerrar sesión\n    if (APIErrorHandler.requiresReauth(error)) {\n      logout();\n      return;\n    }\n\n    // Configurar el error para mostrar al usuario\n    setError(error);\n  }, [logout]);\n\n  /**\n   * Ejecuta una función async y maneja los errores automáticamente\n   */\n  const executeWithErrorHandling = useCallback(async <T>(\n    apiCall: () => Promise<T>,\n    options: {\n      showError?: boolean;\n      onSuccess?: (result: T) => void;\n      onError?: (error: any) => void;\n    } = {}\n  ): Promise<T | undefined> => {\n    const { showError = true, onSuccess, onError } = options;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await apiCall();\n      \n      if (onSuccess) {\n        onSuccess(result);\n      }\n      \n      return result;\n    } catch (err: any) {\n      if (showError) {\n        handleApiError(err);\n      }\n      \n      if (onError) {\n        onError(err);\n      }\n      \n      return undefined;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [handleApiError]);\n\n  /**\n   * Limpia el error actual\n   */\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  /**\n   * Verifica si un error es recuperable\n   */\n  const isRecoverable = error ? APIErrorHandler.isRecoverableError(error) : false;\n\n  /**\n   * Obtiene mensaje amigable del error\n   */\n  const userMessage = error ? APIErrorHandler.getUserFriendlyMessage(error) : '';\n\n  return {\n    error,\n    isLoading,\n    handleApiError,\n    executeWithErrorHandling,\n    clearError,\n    isRecoverable,\n    userMessage\n  };\n};\n\n/**\n * Hook específico para operaciones de productos\n */\nexport const useProductsApi = () => {\n  const { executeWithErrorHandling, ...errorState } = useApiError();\n\n  const createProductWithErrorHandling = useCallback(async (\n    productData: any,\n    onSuccess?: () => void\n  ) => {\n    const { createProduct } = await import('../services/api');\n    \n    return executeWithErrorHandling(\n      () => createProduct(productData),\n      {\n        onSuccess: () => {\n          // Invalidar caché de productos al crear uno nuevo\n          invalidateProductsCache();\n          if (onSuccess) onSuccess();\n        }\n      }\n    );\n  }, [executeWithErrorHandling]);\n\n  const updateProductWithErrorHandling = useCallback(async (\n    productId: number,\n    productData: any,\n    onSuccess?: () => void\n  ) => {\n    const { updateProduct } = await import('../services/api');\n    \n    return executeWithErrorHandling(\n      () => updateProduct(productId, productData),\n      {\n        onSuccess: () => {\n          // Invalidar caché de productos al actualizar uno\n          invalidateProductsCache();\n          if (onSuccess) onSuccess();\n        }\n      }\n    );\n  }, [executeWithErrorHandling]);\n\n  const getProductsWithErrorHandling = useCallback(async (\n    skip: number = 0,\n    limit: number = 20\n  ) => {\n    // Intentar obtener del caché primero\n    const cachedResult = getCachedProductsList(skip, limit);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    \n    const { getProducts } = await import('../services/api');\n    \n    return executeWithErrorHandling(\n      async () => {\n        const result = await getProducts(skip, limit);\n        // Cachear el resultado\n        if (result) {\n          cacheProductsList(result.products, skip, limit);\n        }\n        return result;\n      }\n    );\n  }, [executeWithErrorHandling]);\n\n  const searchProductsWithErrorHandling = useCallback(async (query: string) => {\n    // Intentar obtener del caché primero\n    const cachedResult = getCachedProductSearch(query);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    \n    const { searchProducts } = await import('../services/api');\n    \n    return executeWithErrorHandling(\n      async () => {\n        const result = await searchProducts(query);\n        // Cachear el resultado\n        if (result) {\n          cacheProductSearch(query, result);\n        }\n        return result;\n      },\n      { showError: false } // No mostrar errores de búsqueda automáticamente\n    );\n  }, [executeWithErrorHandling]);\n\n  return {\n    ...errorState,\n    createProduct: createProductWithErrorHandling,\n    updateProduct: updateProductWithErrorHandling,\n    getProducts: getProductsWithErrorHandling,\n    searchProducts: searchProductsWithErrorHandling\n  };\n};\n\n/**\n * Hook específico para operaciones de ventas\n */\nexport const useSalesApi = () => {\n  const { executeWithErrorHandling, ...errorState } = useApiError();\n\n  const processSaleWithErrorHandling = useCallback(async (\n    saleData: any,\n    onSuccess?: () => void\n  ) => {\n    const { postSale } = await import('../services/api');\n    \n    return executeWithErrorHandling(\n      () => postSale(saleData),\n      {\n        onSuccess: () => {\n          // Invalidar caché de productos al hacer una venta (cambia el stock)\n          invalidateProductsCache();\n          if (onSuccess) onSuccess();\n        }\n      }\n    );\n  }, [executeWithErrorHandling]);\n\n  return {\n    ...errorState,\n    processSale: processSaleWithErrorHandling\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}