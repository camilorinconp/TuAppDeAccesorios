{"ast":null,"code":"// ==================================================================\n// SEARCH SLICE - GESTIÓN DE BÚSQUEDA DE PRODUCTOS\n// ==================================================================\n\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { productService } from '../../services/productService';\nconst initialState = {\n  query: '',\n  results: [],\n  isLoading: false,\n  error: null\n};\n\n// Thunk asíncrono para búsqueda de productos\nexport const searchProducts = createAsyncThunk('search/searchProducts', async (query, {\n  rejectWithValue\n}) => {\n  try {\n    if (query.trim().length === 0) {\n      return [];\n    }\n    const products = await productService.search(query);\n    return products;\n  } catch (error) {\n    return rejectWithValue(error.message || 'Error en la búsqueda');\n  }\n});\nconst searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    setQuery: (state, action) => {\n      state.query = action.payload;\n    },\n    clearSearch: state => {\n      state.query = '';\n      state.results = [];\n      state.error = null;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(searchProducts.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(searchProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.results = action.payload;\n      state.error = null;\n    }).addCase(searchProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      state.results = [];\n    });\n  }\n});\nexport const {\n  setQuery,\n  clearSearch,\n  clearError\n} = searchSlice.actions;\nexport default searchSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","productService","initialState","query","results","isLoading","error","searchProducts","rejectWithValue","trim","length","products","search","message","searchSlice","name","reducers","setQuery","state","action","payload","clearSearch","clearError","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/user/TuAppDeAccesorios/frontend/src/store/slices/searchSlice.ts"],"sourcesContent":["// ==================================================================\n// SEARCH SLICE - GESTIÓN DE BÚSQUEDA DE PRODUCTOS\n// ==================================================================\n\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { SearchState } from '../../types/core';\nimport { productService } from '../../services/productService';\n\nconst initialState: SearchState = {\n  query: '',\n  results: [],\n  isLoading: false,\n  error: null,\n};\n\n// Thunk asíncrono para búsqueda de productos\nexport const searchProducts = createAsyncThunk(\n  'search/searchProducts',\n  async (query: string, { rejectWithValue }) => {\n    try {\n      if (query.trim().length === 0) {\n        return [];\n      }\n      const products = await productService.search(query);\n      return products;\n    } catch (error: any) {\n      return rejectWithValue(error.message || 'Error en la búsqueda');\n    }\n  }\n);\n\nconst searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    setQuery: (state, action: PayloadAction<string>) => {\n      state.query = action.payload;\n    },\n    \n    clearSearch: (state) => {\n      state.query = '';\n      state.results = [];\n      state.error = null;\n    },\n    \n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(searchProducts.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(searchProducts.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.results = action.payload;\n        state.error = null;\n      })\n      .addCase(searchProducts.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload as string;\n        state.results = [];\n      });\n  },\n});\n\nexport const { setQuery, clearSearch, clearError } = searchSlice.actions;\nexport default searchSlice.reducer;"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAE/E,SAASC,cAAc,QAAQ,+BAA+B;AAE9D,MAAMC,YAAyB,GAAG;EAChCC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGP,gBAAgB,CAC5C,uBAAuB,EACvB,OAAOG,KAAa,EAAE;EAAEK;AAAgB,CAAC,KAAK;EAC5C,IAAI;IACF,IAAIL,KAAK,CAACM,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;MAC7B,OAAO,EAAE;IACX;IACA,MAAMC,QAAQ,GAAG,MAAMV,cAAc,CAACW,MAAM,CAACT,KAAK,CAAC;IACnD,OAAOQ,QAAQ;EACjB,CAAC,CAAC,OAAOL,KAAU,EAAE;IACnB,OAAOE,eAAe,CAACF,KAAK,CAACO,OAAO,IAAI,sBAAsB,CAAC;EACjE;AACF,CACF,CAAC;AAED,MAAMC,WAAW,GAAGf,WAAW,CAAC;EAC9BgB,IAAI,EAAE,QAAQ;EACdb,YAAY;EACZc,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MAClDD,KAAK,CAACf,KAAK,GAAGgB,MAAM,CAACC,OAAO;IAC9B,CAAC;IAEDC,WAAW,EAAGH,KAAK,IAAK;MACtBA,KAAK,CAACf,KAAK,GAAG,EAAE;MAChBe,KAAK,CAACd,OAAO,GAAG,EAAE;MAClBc,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB,CAAC;IAEDgB,UAAU,EAAGJ,KAAK,IAAK;MACrBA,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDiB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,cAAc,CAACmB,OAAO,EAAGR,KAAK,IAAK;MAC1CA,KAAK,CAACb,SAAS,GAAG,IAAI;MACtBa,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDmB,OAAO,CAAClB,cAAc,CAACoB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACd,OAAO,GAAGe,MAAM,CAACC,OAAO;MAC9BF,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDmB,OAAO,CAAClB,cAAc,CAACqB,QAAQ,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACZ,KAAK,GAAGa,MAAM,CAACC,OAAiB;MACtCF,KAAK,CAACd,OAAO,GAAG,EAAE;IACpB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEa,QAAQ;EAAEI,WAAW;EAAEC;AAAW,CAAC,GAAGR,WAAW,CAACe,OAAO;AACxE,eAAef,WAAW,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}