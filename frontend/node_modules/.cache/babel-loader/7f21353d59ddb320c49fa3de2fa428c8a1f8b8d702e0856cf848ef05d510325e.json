{"ast":null,"code":"// ==================================================================\n// REDUX AUTH HOOK - REEMPLAZO DEL useAuth HOOK\n// ==================================================================\nimport{useEffect}from'react';import{useAppDispatch,useAppSelector}from'./useAppDispatch';import{login,logout,checkAuthStatus,clearError,selectAuth,selectIsAuthenticated,selectUserRole,selectIsInitialized,selectIsLoading,selectAuthError}from'../store/slices/authSlice';export const useReduxAuth=()=>{const dispatch=useAppDispatch();// Selectores\nconst auth=useAppSelector(selectAuth);const isAuthenticated=useAppSelector(selectIsAuthenticated);const userRole=useAppSelector(selectUserRole);const isInitialized=useAppSelector(selectIsInitialized);const isLoading=useAppSelector(selectIsLoading);const error=useAppSelector(selectAuthError);// Verificar autenticación al cargar\nuseEffect(()=>{if(!isInitialized){dispatch(checkAuthStatus());}},[dispatch,isInitialized]);// Funciones de acción\nconst handleLogin=async credentials=>{const result=await dispatch(login(credentials));return login.fulfilled.match(result);};const handleLogout=async()=>{await dispatch(logout());};const handleClearError=()=>{dispatch(clearError());};const handleCheckAuthStatus=async()=>{const result=await dispatch(checkAuthStatus());return checkAuthStatus.fulfilled.match(result);};return{// Estado\nisAuthenticated,userRole,isInitialized,isLoading,error,// Acciones\nlogin:handleLogin,logout:handleLogout,clearError:handleClearError,checkAuthStatus:handleCheckAuthStatus,// Estado completo (para compatibilidad)\nauth};};// Hook especializado para verificación de roles\nexport const useAuthRole=()=>{const{isAuthenticated,userRole}=useReduxAuth();return{isAuthenticated,userRole,isAdmin:userRole==='admin',isSalesStaff:userRole==='sales_staff',hasRole:role=>userRole===role,hasAnyRole:roles=>roles.includes(userRole||'')};};// Hook para inicialización automática\nexport const useAuthInit=()=>{const{isInitialized,checkAuthStatus}=useReduxAuth();useEffect(()=>{if(!isInitialized){checkAuthStatus();}},[isInitialized,checkAuthStatus]);return{isInitialized};};export default useReduxAuth;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}