{"ast":null,"code":"import React,{Component}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";/**\n * Componente ErrorBoundary para capturar errores de React\n */class ErrorBoundary extends Component{constructor(props){super(props);this.state={hasError:false};}static getDerivedStateFromError(error){// Actualiza el state para mostrar la UI de error\nreturn{hasError:true,error};}componentDidCatch(error,errorInfo){// Registrar el error\nconsole.error('ErrorBoundary caught an error:',error,errorInfo);this.setState({error,errorInfo});// Llamar callback si está definido\nif(this.props.onError){this.props.onError(error,errorInfo);}// En producción, enviar el error a un servicio de monitoreo\nif(process.env.NODE_ENV==='production'){// Aquí se podría enviar a Sentry, LogRocket, etc.\nthis.logErrorToService(error,errorInfo);}}logErrorToService(error,errorInfo){// Implementar logging a servicio externo\nconsole.log('Logging error to external service:',{error:error.message,stack:error.stack,componentStack:errorInfo.componentStack});}render(){if(this.state.hasError){var _this$state$errorInfo;// Mostrar fallback personalizado si se proporciona\nif(this.props.fallback){return this.props.fallback;}// UI de error por defecto\nreturn/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',margin:'20px',border:'2px solid #ff6b6b',borderRadius:'8px',backgroundColor:'#ffe0e0',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:'#d63031',marginBottom:'16px'},children:\"\\xA1Oops! Algo sali\\xF3 mal\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#2d3436',marginBottom:'16px'},children:\"Ha ocurrido un error inesperado. Por favor, recarga la p\\xE1gina o int\\xE9ntalo m\\xE1s tarde.\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'16px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),style:{padding:'10px 20px',backgroundColor:'#74b9ff',color:'white',border:'none',borderRadius:'4px',cursor:'pointer',marginRight:'10px'},children:\"Recargar P\\xE1gina\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>this.setState({hasError:false}),style:{padding:'10px 20px',backgroundColor:'#00b894',color:'white',border:'none',borderRadius:'4px',cursor:'pointer'},children:\"Intentar de Nuevo\"})]}),process.env.NODE_ENV==='development'&&this.state.error&&/*#__PURE__*/_jsxs(\"details\",{style:{textAlign:'left',marginTop:'16px'},children:[/*#__PURE__*/_jsx(\"summary\",{style:{cursor:'pointer',fontWeight:'bold'},children:\"Detalles del Error (Solo en Desarrollo)\"}),/*#__PURE__*/_jsxs(\"pre\",{style:{backgroundColor:'#2d3436',color:'#ddd',padding:'10px',borderRadius:'4px',overflow:'auto',fontSize:'12px',marginTop:'8px'},children:[this.state.error.stack,(_this$state$errorInfo=this.state.errorInfo)===null||_this$state$errorInfo===void 0?void 0:_this$state$errorInfo.componentStack]})]})]});}return this.props.children;}}export default ErrorBoundary;/**\n * Hook para manejar errores en componentes funcionales\n */export const useErrorHandler=()=>{const[error,setError]=React.useState(null);const handleError=React.useCallback(error=>{console.error('Error handled by useErrorHandler:',error);setError(error);},[]);const clearError=React.useCallback(()=>{setError(null);},[]);// Si hay un error, lanzarlo para que sea capturado por ErrorBoundary\nReact.useEffect(()=>{if(error){throw error;}},[error]);return{handleError,clearError};};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}