# Configuración Nginx para TuAppDeAccesorios con seguridad empresarial
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Límites de seguridad
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Configuración básica
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format con información de seguridad
    log_format security_log '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           '$request_time $upstream_response_time '
                           '"$http_x_forwarded_for" "$http_x_real_ip"';
    
    access_log /var/log/nginx/access.log security_log;
    
    # Configuraciones de seguridad básicas
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    types_hash_max_size 2048;
    server_tokens off;  # Ocultar versión de Nginx
    
    # Compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Límites de seguridad
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=200r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # Maps para detección de bots y ataques
    map $http_user_agent $is_bot {
        default 0;
        ~*(?i)(bot|crawler|spider|scraper|scanner) 1;
        ~*(?i)(sqlmap|nikto|nmap|gobuster|dirb) 1;
    }
    
    map $request_uri $is_suspicious {
        default 0;
        ~*(?i)(union|select|insert|delete|drop|script|alert|javascript) 1;
        ~*(?i)(\.\./|\.\.\\|/etc/passwd|/proc/|cmd=|exec=) 1;
    }
    
    # Upstream backends
    upstream backend {
        server backend:8000 max_fails=3 fail_timeout=30s;
        # Para múltiples instancias, agregar más servidores:
        # server backend2:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Redireccion HTTP a HTTPS y Let's Encrypt
    server {
        listen 80;
        server_name _;
        
        # Permitir challenges de Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/html;
            allow all;
        }
        
        # Redirigir todo el tráfico HTTP a HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Configuración principal HTTPS
    server {
        listen 443 ssl http2;
        server_name tudominio.com www.tudominio.com;
        
        # Certificados SSL (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/tudominio.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tudominio.com/privkey.pem;
        
        # Configuración SSL/TLS
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # Headers de seguridad avanzados
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https://fonts.gstatic.com; connect-src 'self'; frame-ancestors 'none';" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), bluetooth=()" always;
        
        # Límites de conexión
        limit_conn conn_limit_per_ip 20;
        
        # Bloquear bots maliciosos
        if ($is_bot) {
            return 444;
        }
        
        # Bloquear requests sospechosos
        if ($is_suspicious) {
            return 444;
        }
        
        # API Backend - con rate limiting estricto
        location /api/ {
            # Rate limiting para API
            limit_req zone=api burst=20 nodelay;
            
            # Headers para proxy
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Cache para respuestas estáticas de API
            location ~* \.(json)$ {
                expires 5m;
                add_header Cache-Control "public, no-transform";
            }
        }
        
        # Endpoints de autenticación - rate limiting muy estricto
        location ~ ^/(token|refresh|distributor-token)$ {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No cache para endpoints de auth
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }
        
        # Métricas y health checks - solo para monitoreo interno
        location ~ ^/(metrics|health)$ {
            # Restringir acceso por IP (ajustar según necesidades)
            # allow 10.0.0.0/8;
            # deny all;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Frontend React - sirviendo directamente desde Nginx
        location / {
            # Rate limiting general
            limit_req zone=general burst=50 nodelay;
            
            # Servir archivos estáticos y manejar SPA fallback
            try_files $uri $uri/ /index.html;
        }
        
        # Assets estáticos con cache largo
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Deshabilitar acceso a archivos sensibles
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Bloquear acceso a archivos de configuración
        location ~* \.(yml|yaml|conf|config|env|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}