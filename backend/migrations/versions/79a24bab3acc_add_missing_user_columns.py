"""Add missing user columns

Revision ID: 79a24bab3acc
Revises: 003
Create Date: 2025-07-07 13:33:57.211036

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '79a24bab3acc'
down_revision: Union[str, Sequence[str], None] = '003'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_sale_item_transaction_product'), table_name='point_of_sale_items')
    op.drop_index(op.f('ix_point_of_sale_items_id'), table_name='point_of_sale_items')
    op.drop_index(op.f('ix_point_of_sale_items_product_id'), table_name='point_of_sale_items')
    op.drop_index(op.f('ix_point_of_sale_items_transaction_id'), table_name='point_of_sale_items')
    op.drop_table('point_of_sale_items')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('idx_report_loan_date'), table_name='consignment_reports')
    op.drop_index(op.f('ix_consignment_reports_id'), table_name='consignment_reports')
    op.drop_index(op.f('ix_consignment_reports_loan_id'), table_name='consignment_reports')
    op.drop_index(op.f('ix_consignment_reports_report_date'), table_name='consignment_reports')
    op.drop_table('consignment_reports')
    op.drop_index(op.f('idx_product_name_stock'), table_name='products')
    op.drop_index(op.f('ix_products_description'), table_name='products')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_index(op.f('ix_products_selling_price'), table_name='products')
    op.drop_index(op.f('ix_products_sku'), table_name='products')
    op.drop_index(op.f('ix_products_stock_quantity'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('idx_loan_distributor_status'), table_name='consignment_loans')
    op.drop_index(op.f('idx_loan_due_date_status'), table_name='consignment_loans')
    op.drop_index(op.f('ix_consignment_loans_distributor_id'), table_name='consignment_loans')
    op.drop_index(op.f('ix_consignment_loans_id'), table_name='consignment_loans')
    op.drop_index(op.f('ix_consignment_loans_loan_date'), table_name='consignment_loans')
    op.drop_index(op.f('ix_consignment_loans_product_id'), table_name='consignment_loans')
    op.drop_index(op.f('ix_consignment_loans_return_due_date'), table_name='consignment_loans')
    op.drop_index(op.f('ix_consignment_loans_status'), table_name='consignment_loans')
    op.drop_table('consignment_loans')
    op.drop_index(op.f('ix_distributors_access_code'), table_name='distributors')
    op.drop_index(op.f('ix_distributors_id'), table_name='distributors')
    op.drop_index(op.f('ix_distributors_name'), table_name='distributors')
    op.drop_index(op.f('ix_distributors_phone_number'), table_name='distributors')
    op.drop_table('distributors')
    op.drop_index(op.f('idx_transaction_user_date'), table_name='point_of_sale_transactions')
    op.drop_index(op.f('ix_point_of_sale_transactions_id'), table_name='point_of_sale_transactions')
    op.drop_index(op.f('ix_point_of_sale_transactions_total_amount'), table_name='point_of_sale_transactions')
    op.drop_index(op.f('ix_point_of_sale_transactions_transaction_time'), table_name='point_of_sale_transactions')
    op.drop_index(op.f('ix_point_of_sale_transactions_user_id'), table_name='point_of_sale_transactions')
    op.drop_table('point_of_sale_transactions')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('point_of_sale_transactions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('point_of_sale_transactions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('transaction_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='point_of_sale_transactions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='point_of_sale_transactions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_point_of_sale_transactions_user_id'), 'point_of_sale_transactions', ['user_id'], unique=False)
    op.create_index(op.f('ix_point_of_sale_transactions_transaction_time'), 'point_of_sale_transactions', ['transaction_time'], unique=False)
    op.create_index(op.f('ix_point_of_sale_transactions_total_amount'), 'point_of_sale_transactions', ['total_amount'], unique=False)
    op.create_index(op.f('ix_point_of_sale_transactions_id'), 'point_of_sale_transactions', ['id'], unique=False)
    op.create_index(op.f('idx_transaction_user_date'), 'point_of_sale_transactions', ['user_id', 'transaction_time'], unique=False)
    op.create_table('distributors',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('distributors_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contact_person', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('access_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='distributors_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_distributors_phone_number'), 'distributors', ['phone_number'], unique=False)
    op.create_index(op.f('ix_distributors_name'), 'distributors', ['name'], unique=False)
    op.create_index(op.f('ix_distributors_id'), 'distributors', ['id'], unique=False)
    op.create_index(op.f('ix_distributors_access_code'), 'distributors', ['access_code'], unique=True)
    op.create_table('consignment_loans',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('consignment_loans_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('distributor_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity_loaned', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('loan_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('return_due_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('en_prestamo', 'devuelto', name='loanstatus'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['distributor_id'], ['distributors.id'], name='consignment_loans_distributor_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='consignment_loans_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='consignment_loans_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_consignment_loans_status'), 'consignment_loans', ['status'], unique=False)
    op.create_index(op.f('ix_consignment_loans_return_due_date'), 'consignment_loans', ['return_due_date'], unique=False)
    op.create_index(op.f('ix_consignment_loans_product_id'), 'consignment_loans', ['product_id'], unique=False)
    op.create_index(op.f('ix_consignment_loans_loan_date'), 'consignment_loans', ['loan_date'], unique=False)
    op.create_index(op.f('ix_consignment_loans_id'), 'consignment_loans', ['id'], unique=False)
    op.create_index(op.f('ix_consignment_loans_distributor_id'), 'consignment_loans', ['distributor_id'], unique=False)
    op.create_index(op.f('idx_loan_due_date_status'), 'consignment_loans', ['return_due_date', 'status'], unique=False)
    op.create_index(op.f('idx_loan_distributor_status'), 'consignment_loans', ['distributor_id', 'status'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('products_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('sku', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cost_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('selling_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('stock_quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='products_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_products_stock_quantity'), 'products', ['stock_quantity'], unique=False)
    op.create_index(op.f('ix_products_sku'), 'products', ['sku'], unique=True)
    op.create_index(op.f('ix_products_selling_price'), 'products', ['selling_price'], unique=False)
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_index(op.f('ix_products_description'), 'products', ['description'], unique=False)
    op.create_index(op.f('idx_product_name_stock'), 'products', ['name', 'stock_quantity'], unique=False)
    op.create_table('consignment_reports',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('loan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity_sold', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity_returned', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('report_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['loan_id'], ['consignment_loans.id'], name=op.f('consignment_reports_loan_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('consignment_reports_pkey'))
    )
    op.create_index(op.f('ix_consignment_reports_report_date'), 'consignment_reports', ['report_date'], unique=False)
    op.create_index(op.f('ix_consignment_reports_loan_id'), 'consignment_reports', ['loan_id'], unique=False)
    op.create_index(op.f('ix_consignment_reports_id'), 'consignment_reports', ['id'], unique=False)
    op.create_index(op.f('idx_report_loan_date'), 'consignment_reports', ['loan_id', 'report_date'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('admin', 'sales_staff', name='userrole'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('username', name='users_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('point_of_sale_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity_sold', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price_at_time_of_sale', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('point_of_sale_items_product_id_fkey')),
    sa.ForeignKeyConstraint(['transaction_id'], ['point_of_sale_transactions.id'], name=op.f('point_of_sale_items_transaction_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('point_of_sale_items_pkey'))
    )
    op.create_index(op.f('ix_point_of_sale_items_transaction_id'), 'point_of_sale_items', ['transaction_id'], unique=False)
    op.create_index(op.f('ix_point_of_sale_items_product_id'), 'point_of_sale_items', ['product_id'], unique=False)
    op.create_index(op.f('ix_point_of_sale_items_id'), 'point_of_sale_items', ['id'], unique=False)
    op.create_index(op.f('idx_sale_item_transaction_product'), 'point_of_sale_items', ['transaction_id', 'product_id'], unique=False)
    # ### end Alembic commands ###
