#!/bin/bash

echo "üöÄ PROBANDO LOGIN - TuAppDeAccesorios"
echo "===================================="
echo ""

# Verificar que el backend est√© funcionando
echo "üîç Verificando backend..."
HEALTH=$(curl -s http://localhost:8000/health | jq -r .status 2>/dev/null)

if [ "$HEALTH" != "healthy" ]; then
    echo "‚ùå El backend no est√° funcionando. Ejecuta primero:"
    echo "   docker-compose up -d"
    exit 1
fi

echo "‚úÖ Backend funcionando correctamente"
echo ""

echo "üß™ Probando login directamente:"
echo "================================"

# Test con credenciales correctas
echo "1. Probando admin/admin123:"
LOGIN_RESPONSE=$(curl -s -X POST "http://localhost:8000/token" \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "username=admin&password=admin123")

if echo "$LOGIN_RESPONSE" | jq -e .access_token > /dev/null 2>&1; then
    echo "   ‚úÖ LOGIN EXITOSO"
    TOKEN=$(echo "$LOGIN_RESPONSE" | jq -r .access_token)
    echo "   üé´ Token: ${TOKEN:0:50}..."
else
    echo "   ‚ùå LOGIN FALLIDO"
    echo "   üìÑ Respuesta: $LOGIN_RESPONSE"
fi

echo ""

# Test con credenciales incorrectas
echo "2. Probando credenciales incorrectas:"
WRONG_LOGIN=$(curl -s -X POST "http://localhost:8000/token" \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "username=wrong&password=wrong")

if echo "$WRONG_LOGIN" | jq -e .access_token > /dev/null 2>&1; then
    echo "   ‚ùå ERROR: Login exitoso con credenciales incorrectas"
else
    echo "   ‚úÖ Correctamente rechazado"
    echo "   üìÑ Error: $(echo "$WRONG_LOGIN" | jq -r .message)"
fi

echo ""
echo "üåê OPCIONES PARA PROBAR EL LOGIN:"
echo "================================"
echo ""
echo "OPCI√ìN 1 - P√°gina de login funcional (RECOMENDADO):"
echo "   open login_working.html"
echo ""
echo "OPCI√ìN 2 - Swagger UI:"
echo "   open http://localhost:8000/docs"
echo ""
echo "OPCI√ìN 3 - Frontend React (si est√° compilado):"
echo "   open http://localhost:3001"
echo ""

echo "¬øQu√© opci√≥n quieres abrir?"
echo "1) P√°gina de login funcional"
echo "2) Swagger UI"
echo "3) Frontend React"
echo "4) Todas las opciones"
echo "5) Solo mostrar informaci√≥n"

read -p "Selecciona (1-5): " choice

case $choice in
    1)
        echo "üöÄ Abriendo p√°gina de login funcional..."
        open login_working.html 2>/dev/null || echo "Archivo: $(pwd)/login_working.html"
        ;;
    2)
        echo "üìö Abriendo Swagger UI..."
        open http://localhost:8000/docs 2>/dev/null || echo "URL: http://localhost:8000/docs"
        ;;
    3)
        echo "üåê Abriendo Frontend React..."
        open http://localhost:3001 2>/dev/null || echo "URL: http://localhost:3001"
        ;;
    4)
        echo "üöÄ Abriendo todas las opciones..."
        open login_working.html 2>/dev/null || echo "Archivo: $(pwd)/login_working.html"
        sleep 2
        open http://localhost:8000/docs 2>/dev/null || echo "URL: http://localhost:8000/docs"
        sleep 2
        open http://localhost:3001 2>/dev/null || echo "URL: http://localhost:3001"
        ;;
    5)
        echo "‚ÑπÔ∏è Informaci√≥n mostrada arriba"
        ;;
    *)
        echo "‚ùå Opci√≥n inv√°lida"
        ;;
esac

echo ""
echo "üìã RESUMEN:"
echo "==========="
echo "‚úÖ Backend funcionando: http://localhost:8000"
echo "‚úÖ Credenciales verificadas: admin/admin123"
echo "‚úÖ API de login operativa al 100%"
echo ""
echo "Si tienes problemas con el frontend React, usa la p√°gina login_working.html"